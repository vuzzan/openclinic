/*
 * Java bean class for entity table thuoc 
 * Created on 14 Nov 2017 ( Date ISO 2017-11-14 - Time 14:56:10 )
 * Generated by Telosys Tools Generator ( version 2.1.1 )
 * template update by NEO
 */

package com.model.dao;

import java.io.Serializable;
import org.apache.logging.log4j.LogManager;
import org.apache.logging.log4j.Logger;
import org.sql2o.Connection;
import com.DbHelper;


/**
 * Entity bean for table "thuoc"
 * 
 * @author Telosys Tools Generator
 *
 */
public class Thuoc implements Serializable
{
    static Logger logger = LogManager.getLogger(Thuoc.class.getName());
    private static final long serialVersionUID = 1L;

    public Integer    THUOC_ID ; // Primary Key

    public String     MA_HOAT_CHAT ;
    public String     MA_AX ;
    public String     HOAT_CHAT ;
    public String     HOATCHAT_AX ;
    public String     MA_DUONG_DUNG ;
    public String     MA_DUONGDUNG_AX ;
    public String     DUONG_DUNG ;
    public String     DUONGDUNG_AX ;
    public String     HAM_LUONG ;
    public String     HAMLUONG_AX ;
    public String     TEN_THUOC ;
    public String     TENTHUOC_AX ;
    public String     SO_DANG_KY ;
    public String     SODANGKY_AX ;
    public String     DONG_GOI ;
    public String     DON_VI_TINH ;
    public Integer    DON_GIA ;
    public Integer    DON_GIA_TT ;
    public Integer    SO_LUONG ;
    public String     MA_CSKCB ;
    public String     HANG_SX ;
    public String     NUOC_SX ;
    public String     NHA_THAU ;
    public String     QUYET_DINH ;
    public String     CONG_BO ;
    public String     MA_THUOC_BV ;
    public Integer    LOAI_THUOC ;
    public Integer    LOAI_THAU ;
    public String     NHOM_THAU ;
    public Integer    MANHOM_9324 ;
    public Integer    HIEULUC ;
    public Integer    KETQUA ;
    public Integer    TYP ;
    public Integer    THUOC_RANK ;

    /**
     * Default constructor
     */
    public Thuoc()
    {
        super();
        // Set default value 
this.MA_HOAT_CHAT = "";//String.format("%8.8s", "MA_HOAT_CHAT").trim(); // data type = String     8
this.MA_AX = "";//String.format("%8.8s", "MA_AX").trim(); // data type = String     8
this.HOAT_CHAT = "";//String.format("%255.255s", "HOAT_CHAT").trim(); // data type = String     255
this.HOATCHAT_AX = "";//String.format("%255.255s", "HOATCHAT_AX").trim(); // data type = String     255
this.MA_DUONG_DUNG = "";//String.format("%8.8s", "MA_DUONG_DUNG").trim(); // data type = String     8
this.MA_DUONGDUNG_AX = "";//String.format("%8.8s", "MA_DUONGDUNG_AX").trim(); // data type = String     8
this.DUONG_DUNG = "";//String.format("%64.64s", "DUONG_DUNG").trim(); // data type = String     64
this.DUONGDUNG_AX = "";//String.format("%64.64s", "DUONGDUNG_AX").trim(); // data type = String     64
this.HAM_LUONG = "";//String.format("%64.64s", "HAM_LUONG").trim(); // data type = String     64
this.HAMLUONG_AX = "";//String.format("%64.64s", "HAMLUONG_AX").trim(); // data type = String     64
this.TEN_THUOC = "";//String.format("%255.255s", "TEN_THUOC").trim(); // data type = String     255
this.TENTHUOC_AX = "";//String.format("%255.255s", "TENTHUOC_AX").trim(); // data type = String     255
this.SO_DANG_KY = "";//String.format("%255.255s", "SO_DANG_KY").trim(); // data type = String     255
this.SODANGKY_AX = "";//String.format("%255.255s", "SODANGKY_AX").trim(); // data type = String     255
this.DONG_GOI = "";//String.format("%255.255s", "DONG_GOI").trim(); // data type = String     255
this.DON_VI_TINH = "";//String.format("%128.128s", "DON_VI_TINH").trim(); // data type = String     128
this.DON_GIA = 0;                         // data type = Integer   
this.DON_GIA_TT = 0;                         // data type = Integer   
this.SO_LUONG = 0;                         // data type = Integer   
this.MA_CSKCB = "";//String.format("%5.5s", "MA_CSKCB").trim(); // data type = String     5
this.HANG_SX = "";//String.format("%255.255s", "HANG_SX").trim(); // data type = String     255
this.NUOC_SX = "";//String.format("%128.128s", "NUOC_SX").trim(); // data type = String     128
this.NHA_THAU = "";//String.format("%255.255s", "NHA_THAU").trim(); // data type = String     255
this.QUYET_DINH = "";//String.format("%128.128s", "QUYET_DINH").trim(); // data type = String     128
this.CONG_BO = "";//String.format("%8.8s", "CONG_BO").trim(); // data type = String     8
this.MA_THUOC_BV = "";//String.format("%8.8s", "MA_THUOC_BV").trim(); // data type = String     8
this.LOAI_THUOC = 0;                         // data type = Integer   
this.LOAI_THAU = 0;                         // data type = Integer   
this.NHOM_THAU = "";//String.format("%8.8s", "NHOM_THAU").trim(); // data type = String     8
this.MANHOM_9324 = 0;                         // data type = Integer   
this.HIEULUC = 0;                         // data type = Integer   
this.KETQUA = 0;                         // data type = Integer   
this.TYP = 0;                         // data type = Integer   
this.THUOC_RANK = 0;                         // data type = Integer   
        // End Set default value 
    }
    
    //----------------------------------------------------------------------
    // GETTER(S) & SETTER(S) FOR THE PRIMARY KEY 
    //----------------------------------------------------------------------
    /**
     * Set the "thuocId" field value
     * This field is mapped on the database column "THUOC_ID" ( type "INT", NotNull : true ) 
     * @param THUOC_ID
     */
	public void setTHUOC_ID( Integer THUOC_ID )
    {
        this.THUOC_ID = THUOC_ID ;
    }
    /**
     * Get the "THUOC_ID" field value
     * This field is mapped on the database column "THUOC_ID" ( type "INT", NotNull : true ) 
     * @return the field value
     */
	public Integer getTHUOC_ID()
    {
        return this.THUOC_ID;
    }

    //----------------------------------------------------------------------
    // GETTER(S) & SETTER(S) FOR DATA FIELDS
    //----------------------------------------------------------------------
    //--- DATABASE MAPPING : MA_HOAT_CHAT ( VARCHAR ) 
    /**
     * Set the "MA_HOAT_CHAT" field value
     * This field is mapped on the database column "MA_HOAT_CHAT" ( type "VARCHAR", NotNull : false ) 
     * @param MA_HOAT_CHAT
     */
    public void setMA_HOAT_CHAT( String MA_HOAT_CHAT )
    {
        this.MA_HOAT_CHAT = MA_HOAT_CHAT;
    }
    /**
     * Get the "maHoatChat" field value
     * This field is mapped on the database column "MA_HOAT_CHAT" ( type "VARCHAR", NotNull : false ) 
     * @return the field value
     */
    public String getMA_HOAT_CHAT()
    {
        return this.MA_HOAT_CHAT;
    }

    //--- DATABASE MAPPING : MA_AX ( VARCHAR ) 
    /**
     * Set the "MA_AX" field value
     * This field is mapped on the database column "MA_AX" ( type "VARCHAR", NotNull : false ) 
     * @param MA_AX
     */
    public void setMA_AX( String MA_AX )
    {
        this.MA_AX = MA_AX;
    }
    /**
     * Get the "maAx" field value
     * This field is mapped on the database column "MA_AX" ( type "VARCHAR", NotNull : false ) 
     * @return the field value
     */
    public String getMA_AX()
    {
        return this.MA_AX;
    }

    //--- DATABASE MAPPING : HOAT_CHAT ( VARCHAR ) 
    /**
     * Set the "HOAT_CHAT" field value
     * This field is mapped on the database column "HOAT_CHAT" ( type "VARCHAR", NotNull : false ) 
     * @param HOAT_CHAT
     */
    public void setHOAT_CHAT( String HOAT_CHAT )
    {
        this.HOAT_CHAT = HOAT_CHAT;
    }
    /**
     * Get the "hoatChat" field value
     * This field is mapped on the database column "HOAT_CHAT" ( type "VARCHAR", NotNull : false ) 
     * @return the field value
     */
    public String getHOAT_CHAT()
    {
        return this.HOAT_CHAT;
    }

    //--- DATABASE MAPPING : HOATCHAT_AX ( VARCHAR ) 
    /**
     * Set the "HOATCHAT_AX" field value
     * This field is mapped on the database column "HOATCHAT_AX" ( type "VARCHAR", NotNull : false ) 
     * @param HOATCHAT_AX
     */
    public void setHOATCHAT_AX( String HOATCHAT_AX )
    {
        this.HOATCHAT_AX = HOATCHAT_AX;
    }
    /**
     * Get the "hoatchatAx" field value
     * This field is mapped on the database column "HOATCHAT_AX" ( type "VARCHAR", NotNull : false ) 
     * @return the field value
     */
    public String getHOATCHAT_AX()
    {
        return this.HOATCHAT_AX;
    }

    //--- DATABASE MAPPING : MA_DUONG_DUNG ( VARCHAR ) 
    /**
     * Set the "MA_DUONG_DUNG" field value
     * This field is mapped on the database column "MA_DUONG_DUNG" ( type "VARCHAR", NotNull : false ) 
     * @param MA_DUONG_DUNG
     */
    public void setMA_DUONG_DUNG( String MA_DUONG_DUNG )
    {
        this.MA_DUONG_DUNG = MA_DUONG_DUNG;
    }
    /**
     * Get the "maDuongDung" field value
     * This field is mapped on the database column "MA_DUONG_DUNG" ( type "VARCHAR", NotNull : false ) 
     * @return the field value
     */
    public String getMA_DUONG_DUNG()
    {
        return this.MA_DUONG_DUNG;
    }

    //--- DATABASE MAPPING : MA_DUONGDUNG_AX ( VARCHAR ) 
    /**
     * Set the "MA_DUONGDUNG_AX" field value
     * This field is mapped on the database column "MA_DUONGDUNG_AX" ( type "VARCHAR", NotNull : false ) 
     * @param MA_DUONGDUNG_AX
     */
    public void setMA_DUONGDUNG_AX( String MA_DUONGDUNG_AX )
    {
        this.MA_DUONGDUNG_AX = MA_DUONGDUNG_AX;
    }
    /**
     * Get the "maDuongdungAx" field value
     * This field is mapped on the database column "MA_DUONGDUNG_AX" ( type "VARCHAR", NotNull : false ) 
     * @return the field value
     */
    public String getMA_DUONGDUNG_AX()
    {
        return this.MA_DUONGDUNG_AX;
    }

    //--- DATABASE MAPPING : DUONG_DUNG ( VARCHAR ) 
    /**
     * Set the "DUONG_DUNG" field value
     * This field is mapped on the database column "DUONG_DUNG" ( type "VARCHAR", NotNull : false ) 
     * @param DUONG_DUNG
     */
    public void setDUONG_DUNG( String DUONG_DUNG )
    {
        this.DUONG_DUNG = DUONG_DUNG;
    }
    /**
     * Get the "duongDung" field value
     * This field is mapped on the database column "DUONG_DUNG" ( type "VARCHAR", NotNull : false ) 
     * @return the field value
     */
    public String getDUONG_DUNG()
    {
        return this.DUONG_DUNG;
    }

    //--- DATABASE MAPPING : DUONGDUNG_AX ( VARCHAR ) 
    /**
     * Set the "DUONGDUNG_AX" field value
     * This field is mapped on the database column "DUONGDUNG_AX" ( type "VARCHAR", NotNull : false ) 
     * @param DUONGDUNG_AX
     */
    public void setDUONGDUNG_AX( String DUONGDUNG_AX )
    {
        this.DUONGDUNG_AX = DUONGDUNG_AX;
    }
    /**
     * Get the "duongdungAx" field value
     * This field is mapped on the database column "DUONGDUNG_AX" ( type "VARCHAR", NotNull : false ) 
     * @return the field value
     */
    public String getDUONGDUNG_AX()
    {
        return this.DUONGDUNG_AX;
    }

    //--- DATABASE MAPPING : HAM_LUONG ( VARCHAR ) 
    /**
     * Set the "HAM_LUONG" field value
     * This field is mapped on the database column "HAM_LUONG" ( type "VARCHAR", NotNull : false ) 
     * @param HAM_LUONG
     */
    public void setHAM_LUONG( String HAM_LUONG )
    {
        this.HAM_LUONG = HAM_LUONG;
    }
    /**
     * Get the "hamLuong" field value
     * This field is mapped on the database column "HAM_LUONG" ( type "VARCHAR", NotNull : false ) 
     * @return the field value
     */
    public String getHAM_LUONG()
    {
        return this.HAM_LUONG;
    }

    //--- DATABASE MAPPING : HAMLUONG_AX ( VARCHAR ) 
    /**
     * Set the "HAMLUONG_AX" field value
     * This field is mapped on the database column "HAMLUONG_AX" ( type "VARCHAR", NotNull : false ) 
     * @param HAMLUONG_AX
     */
    public void setHAMLUONG_AX( String HAMLUONG_AX )
    {
        this.HAMLUONG_AX = HAMLUONG_AX;
    }
    /**
     * Get the "hamluongAx" field value
     * This field is mapped on the database column "HAMLUONG_AX" ( type "VARCHAR", NotNull : false ) 
     * @return the field value
     */
    public String getHAMLUONG_AX()
    {
        return this.HAMLUONG_AX;
    }

    //--- DATABASE MAPPING : TEN_THUOC ( VARCHAR ) 
    /**
     * Set the "TEN_THUOC" field value
     * This field is mapped on the database column "TEN_THUOC" ( type "VARCHAR", NotNull : false ) 
     * @param TEN_THUOC
     */
    public void setTEN_THUOC( String TEN_THUOC )
    {
        this.TEN_THUOC = TEN_THUOC;
    }
    /**
     * Get the "tenThuoc" field value
     * This field is mapped on the database column "TEN_THUOC" ( type "VARCHAR", NotNull : false ) 
     * @return the field value
     */
    public String getTEN_THUOC()
    {
        return this.TEN_THUOC;
    }

    //--- DATABASE MAPPING : TENTHUOC_AX ( VARCHAR ) 
    /**
     * Set the "TENTHUOC_AX" field value
     * This field is mapped on the database column "TENTHUOC_AX" ( type "VARCHAR", NotNull : false ) 
     * @param TENTHUOC_AX
     */
    public void setTENTHUOC_AX( String TENTHUOC_AX )
    {
        this.TENTHUOC_AX = TENTHUOC_AX;
    }
    /**
     * Get the "tenthuocAx" field value
     * This field is mapped on the database column "TENTHUOC_AX" ( type "VARCHAR", NotNull : false ) 
     * @return the field value
     */
    public String getTENTHUOC_AX()
    {
        return this.TENTHUOC_AX;
    }

    //--- DATABASE MAPPING : SO_DANG_KY ( VARCHAR ) 
    /**
     * Set the "SO_DANG_KY" field value
     * This field is mapped on the database column "SO_DANG_KY" ( type "VARCHAR", NotNull : false ) 
     * @param SO_DANG_KY
     */
    public void setSO_DANG_KY( String SO_DANG_KY )
    {
        this.SO_DANG_KY = SO_DANG_KY;
    }
    /**
     * Get the "soDangKy" field value
     * This field is mapped on the database column "SO_DANG_KY" ( type "VARCHAR", NotNull : false ) 
     * @return the field value
     */
    public String getSO_DANG_KY()
    {
        return this.SO_DANG_KY;
    }

    //--- DATABASE MAPPING : SODANGKY_AX ( VARCHAR ) 
    /**
     * Set the "SODANGKY_AX" field value
     * This field is mapped on the database column "SODANGKY_AX" ( type "VARCHAR", NotNull : false ) 
     * @param SODANGKY_AX
     */
    public void setSODANGKY_AX( String SODANGKY_AX )
    {
        this.SODANGKY_AX = SODANGKY_AX;
    }
    /**
     * Get the "sodangkyAx" field value
     * This field is mapped on the database column "SODANGKY_AX" ( type "VARCHAR", NotNull : false ) 
     * @return the field value
     */
    public String getSODANGKY_AX()
    {
        return this.SODANGKY_AX;
    }

    //--- DATABASE MAPPING : DONG_GOI ( VARCHAR ) 
    /**
     * Set the "DONG_GOI" field value
     * This field is mapped on the database column "DONG_GOI" ( type "VARCHAR", NotNull : false ) 
     * @param DONG_GOI
     */
    public void setDONG_GOI( String DONG_GOI )
    {
        this.DONG_GOI = DONG_GOI;
    }
    /**
     * Get the "dongGoi" field value
     * This field is mapped on the database column "DONG_GOI" ( type "VARCHAR", NotNull : false ) 
     * @return the field value
     */
    public String getDONG_GOI()
    {
        return this.DONG_GOI;
    }

    //--- DATABASE MAPPING : DON_VI_TINH ( VARCHAR ) 
    /**
     * Set the "DON_VI_TINH" field value
     * This field is mapped on the database column "DON_VI_TINH" ( type "VARCHAR", NotNull : false ) 
     * @param DON_VI_TINH
     */
    public void setDON_VI_TINH( String DON_VI_TINH )
    {
        this.DON_VI_TINH = DON_VI_TINH;
    }
    /**
     * Get the "donViTinh" field value
     * This field is mapped on the database column "DON_VI_TINH" ( type "VARCHAR", NotNull : false ) 
     * @return the field value
     */
    public String getDON_VI_TINH()
    {
        return this.DON_VI_TINH;
    }

    //--- DATABASE MAPPING : DON_GIA ( INT ) 
    /**
     * Set the "DON_GIA" field value
     * This field is mapped on the database column "DON_GIA" ( type "INT", NotNull : false ) 
     * @param DON_GIA
     */
    public void setDON_GIA( Integer DON_GIA )
    {
        this.DON_GIA = DON_GIA;
    }
    /**
     * Get the "donGia" field value
     * This field is mapped on the database column "DON_GIA" ( type "INT", NotNull : false ) 
     * @return the field value
     */
    public Integer getDON_GIA()
    {
        return this.DON_GIA;
    }

    //--- DATABASE MAPPING : DON_GIA_TT ( INT ) 
    /**
     * Set the "DON_GIA_TT" field value
     * This field is mapped on the database column "DON_GIA_TT" ( type "INT", NotNull : false ) 
     * @param DON_GIA_TT
     */
    public void setDON_GIA_TT( Integer DON_GIA_TT )
    {
        this.DON_GIA_TT = DON_GIA_TT;
    }
    /**
     * Get the "donGiaTt" field value
     * This field is mapped on the database column "DON_GIA_TT" ( type "INT", NotNull : false ) 
     * @return the field value
     */
    public Integer getDON_GIA_TT()
    {
        return this.DON_GIA_TT;
    }

    //--- DATABASE MAPPING : SO_LUONG ( INT ) 
    /**
     * Set the "SO_LUONG" field value
     * This field is mapped on the database column "SO_LUONG" ( type "INT", NotNull : false ) 
     * @param SO_LUONG
     */
    public void setSO_LUONG( Integer SO_LUONG )
    {
        this.SO_LUONG = SO_LUONG;
    }
    /**
     * Get the "soLuong" field value
     * This field is mapped on the database column "SO_LUONG" ( type "INT", NotNull : false ) 
     * @return the field value
     */
    public Integer getSO_LUONG()
    {
        return this.SO_LUONG;
    }

    //--- DATABASE MAPPING : MA_CSKCB ( VARCHAR ) 
    /**
     * Set the "MA_CSKCB" field value
     * This field is mapped on the database column "MA_CSKCB" ( type "VARCHAR", NotNull : false ) 
     * @param MA_CSKCB
     */
    public void setMA_CSKCB( String MA_CSKCB )
    {
        this.MA_CSKCB = MA_CSKCB;
    }
    /**
     * Get the "maCskcb" field value
     * This field is mapped on the database column "MA_CSKCB" ( type "VARCHAR", NotNull : false ) 
     * @return the field value
     */
    public String getMA_CSKCB()
    {
        return this.MA_CSKCB;
    }

    //--- DATABASE MAPPING : HANG_SX ( VARCHAR ) 
    /**
     * Set the "HANG_SX" field value
     * This field is mapped on the database column "HANG_SX" ( type "VARCHAR", NotNull : false ) 
     * @param HANG_SX
     */
    public void setHANG_SX( String HANG_SX )
    {
        this.HANG_SX = HANG_SX;
    }
    /**
     * Get the "hangSx" field value
     * This field is mapped on the database column "HANG_SX" ( type "VARCHAR", NotNull : false ) 
     * @return the field value
     */
    public String getHANG_SX()
    {
        return this.HANG_SX;
    }

    //--- DATABASE MAPPING : NUOC_SX ( VARCHAR ) 
    /**
     * Set the "NUOC_SX" field value
     * This field is mapped on the database column "NUOC_SX" ( type "VARCHAR", NotNull : false ) 
     * @param NUOC_SX
     */
    public void setNUOC_SX( String NUOC_SX )
    {
        this.NUOC_SX = NUOC_SX;
    }
    /**
     * Get the "nuocSx" field value
     * This field is mapped on the database column "NUOC_SX" ( type "VARCHAR", NotNull : false ) 
     * @return the field value
     */
    public String getNUOC_SX()
    {
        return this.NUOC_SX;
    }

    //--- DATABASE MAPPING : NHA_THAU ( VARCHAR ) 
    /**
     * Set the "NHA_THAU" field value
     * This field is mapped on the database column "NHA_THAU" ( type "VARCHAR", NotNull : false ) 
     * @param NHA_THAU
     */
    public void setNHA_THAU( String NHA_THAU )
    {
        this.NHA_THAU = NHA_THAU;
    }
    /**
     * Get the "nhaThau" field value
     * This field is mapped on the database column "NHA_THAU" ( type "VARCHAR", NotNull : false ) 
     * @return the field value
     */
    public String getNHA_THAU()
    {
        return this.NHA_THAU;
    }

    //--- DATABASE MAPPING : QUYET_DINH ( VARCHAR ) 
    /**
     * Set the "QUYET_DINH" field value
     * This field is mapped on the database column "QUYET_DINH" ( type "VARCHAR", NotNull : false ) 
     * @param QUYET_DINH
     */
    public void setQUYET_DINH( String QUYET_DINH )
    {
        this.QUYET_DINH = QUYET_DINH;
    }
    /**
     * Get the "quyetDinh" field value
     * This field is mapped on the database column "QUYET_DINH" ( type "VARCHAR", NotNull : false ) 
     * @return the field value
     */
    public String getQUYET_DINH()
    {
        return this.QUYET_DINH;
    }

    //--- DATABASE MAPPING : CONG_BO ( VARCHAR ) 
    /**
     * Set the "CONG_BO" field value
     * This field is mapped on the database column "CONG_BO" ( type "VARCHAR", NotNull : false ) 
     * @param CONG_BO
     */
    public void setCONG_BO( String CONG_BO )
    {
        this.CONG_BO = CONG_BO;
    }
    /**
     * Get the "congBo" field value
     * This field is mapped on the database column "CONG_BO" ( type "VARCHAR", NotNull : false ) 
     * @return the field value
     */
    public String getCONG_BO()
    {
        return this.CONG_BO;
    }

    //--- DATABASE MAPPING : MA_THUOC_BV ( VARCHAR ) 
    /**
     * Set the "MA_THUOC_BV" field value
     * This field is mapped on the database column "MA_THUOC_BV" ( type "VARCHAR", NotNull : false ) 
     * @param MA_THUOC_BV
     */
    public void setMA_THUOC_BV( String MA_THUOC_BV )
    {
        this.MA_THUOC_BV = MA_THUOC_BV;
    }
    /**
     * Get the "maThuocBv" field value
     * This field is mapped on the database column "MA_THUOC_BV" ( type "VARCHAR", NotNull : false ) 
     * @return the field value
     */
    public String getMA_THUOC_BV()
    {
        return this.MA_THUOC_BV;
    }

    //--- DATABASE MAPPING : LOAI_THUOC ( INT ) 
    /**
     * Set the "LOAI_THUOC" field value
     * This field is mapped on the database column "LOAI_THUOC" ( type "INT", NotNull : false ) 
     * @param LOAI_THUOC
     */
    public void setLOAI_THUOC( Integer LOAI_THUOC )
    {
        this.LOAI_THUOC = LOAI_THUOC;
    }
    /**
     * Get the "loaiThuoc" field value
     * This field is mapped on the database column "LOAI_THUOC" ( type "INT", NotNull : false ) 
     * @return the field value
     */
    public Integer getLOAI_THUOC()
    {
        return this.LOAI_THUOC;
    }

    //--- DATABASE MAPPING : LOAI_THAU ( INT ) 
    /**
     * Set the "LOAI_THAU" field value
     * This field is mapped on the database column "LOAI_THAU" ( type "INT", NotNull : false ) 
     * @param LOAI_THAU
     */
    public void setLOAI_THAU( Integer LOAI_THAU )
    {
        this.LOAI_THAU = LOAI_THAU;
    }
    /**
     * Get the "loaiThau" field value
     * This field is mapped on the database column "LOAI_THAU" ( type "INT", NotNull : false ) 
     * @return the field value
     */
    public Integer getLOAI_THAU()
    {
        return this.LOAI_THAU;
    }

    //--- DATABASE MAPPING : NHOM_THAU ( VARCHAR ) 
    /**
     * Set the "NHOM_THAU" field value
     * This field is mapped on the database column "NHOM_THAU" ( type "VARCHAR", NotNull : false ) 
     * @param NHOM_THAU
     */
    public void setNHOM_THAU( String NHOM_THAU )
    {
        this.NHOM_THAU = NHOM_THAU;
    }
    /**
     * Get the "nhomThau" field value
     * This field is mapped on the database column "NHOM_THAU" ( type "VARCHAR", NotNull : false ) 
     * @return the field value
     */
    public String getNHOM_THAU()
    {
        return this.NHOM_THAU;
    }

    //--- DATABASE MAPPING : MANHOM_9324 ( INT ) 
    /**
     * Set the "MANHOM_9324" field value
     * This field is mapped on the database column "MANHOM_9324" ( type "INT", NotNull : false ) 
     * @param MANHOM_9324
     */
    public void setMANHOM_9324( Integer MANHOM_9324 )
    {
        this.MANHOM_9324 = MANHOM_9324;
    }
    /**
     * Get the "manhom9324" field value
     * This field is mapped on the database column "MANHOM_9324" ( type "INT", NotNull : false ) 
     * @return the field value
     */
    public Integer getMANHOM_9324()
    {
        return this.MANHOM_9324;
    }

    //--- DATABASE MAPPING : HIEULUC ( INT ) 
    /**
     * Set the "HIEULUC" field value
     * This field is mapped on the database column "HIEULUC" ( type "INT", NotNull : false ) 
     * @param HIEULUC
     */
    public void setHIEULUC( Integer HIEULUC )
    {
        this.HIEULUC = HIEULUC;
    }
    /**
     * Get the "hieuluc" field value
     * This field is mapped on the database column "HIEULUC" ( type "INT", NotNull : false ) 
     * @return the field value
     */
    public Integer getHIEULUC()
    {
        return this.HIEULUC;
    }

    //--- DATABASE MAPPING : KETQUA ( INT ) 
    /**
     * Set the "KETQUA" field value
     * This field is mapped on the database column "KETQUA" ( type "INT", NotNull : false ) 
     * @param KETQUA
     */
    public void setKETQUA( Integer KETQUA )
    {
        this.KETQUA = KETQUA;
    }
    /**
     * Get the "ketqua" field value
     * This field is mapped on the database column "KETQUA" ( type "INT", NotNull : false ) 
     * @return the field value
     */
    public Integer getKETQUA()
    {
        return this.KETQUA;
    }

    //--- DATABASE MAPPING : TYP ( INT ) 
    /**
     * Set the "TYP" field value
     * This field is mapped on the database column "TYP" ( type "INT", NotNull : false ) 
     * @param TYP
     */
    public void setTYP( Integer TYP )
    {
        this.TYP = TYP;
    }
    /**
     * Get the "typ" field value
     * This field is mapped on the database column "TYP" ( type "INT", NotNull : false ) 
     * @return the field value
     */
    public Integer getTYP()
    {
        return this.TYP;
    }

    //--- DATABASE MAPPING : THUOC_RANK ( INT ) 
    /**
     * Set the "THUOC_RANK" field value
     * This field is mapped on the database column "THUOC_RANK" ( type "INT", NotNull : true ) 
     * @param THUOC_RANK
     */
    public void setTHUOC_RANK( Integer THUOC_RANK )
    {
        this.THUOC_RANK = THUOC_RANK;
    }
    /**
     * Get the "thuocRank" field value
     * This field is mapped on the database column "THUOC_RANK" ( type "INT", NotNull : true ) 
     * @return the field value
     */
    public Integer getTHUOC_RANK()
    {
        return this.THUOC_RANK;
    }



/*
 * CRUD functions
 */
    public static Thuoc load(String THUOC_ID) {
    	Connection connection = null;

		try {
			connection = DbHelper.getSql2o();
			String sql = "select * from thuoc where THUOC_ID=:THUOC_ID";
			logger.debug(sql);
			Thuoc obj = connection
					.createQuery(
							sql,
							true)
					.addParameter("THUOC_ID", THUOC_ID)
					.executeAndFetchFirst( Thuoc.class);
            logger.info(obj);
            logger.debug("Load "+obj);
            return obj;
		} catch (Exception t) {
            logger.error("Load Error: ID="+THUOC_ID +"\nException=\n"+ t);
			throw new RuntimeException("LOAD [Thuoc]. ERROR: "+t.getMessage(), t);
		}
    }
    
    public static Thuoc load(Integer THUOC_ID) {
    	Connection connection = null;

		try {
			connection = DbHelper.getSql2o();
			String sql = "select * from thuoc where THUOC_ID=:THUOC_ID";
			logger.debug(sql);
			Thuoc obj = connection
					.createQuery(
							sql,
							true)
					.addParameter("THUOC_ID", THUOC_ID)
					.executeAndFetchFirst( Thuoc.class);
            logger.info(obj);
            logger.debug("Load "+obj);
            return obj;
		} catch (Exception t) {
            logger.error("Load Error: ID="+THUOC_ID +"\nException=\n"+ t);
			throw new RuntimeException("LOAD [Thuoc]. ERROR: "+t.getMessage(), t);
		}
    }
    
    public String toString(){
    	String strData = "thuoc "
    			+" THUOC_ID = " + THUOC_ID                + "; MA_HOAT_CHAT = " + MA_HOAT_CHAT
                + "; MA_AX = " + MA_AX
                + "; HOAT_CHAT = " + HOAT_CHAT
                + "; HOATCHAT_AX = " + HOATCHAT_AX
                + "; MA_DUONG_DUNG = " + MA_DUONG_DUNG
                + "; MA_DUONGDUNG_AX = " + MA_DUONGDUNG_AX
                + "; DUONG_DUNG = " + DUONG_DUNG
                + "; DUONGDUNG_AX = " + DUONGDUNG_AX
                + "; HAM_LUONG = " + HAM_LUONG
                + "; HAMLUONG_AX = " + HAMLUONG_AX
                + "; TEN_THUOC = " + TEN_THUOC
                + "; TENTHUOC_AX = " + TENTHUOC_AX
                + "; SO_DANG_KY = " + SO_DANG_KY
                + "; SODANGKY_AX = " + SODANGKY_AX
                + "; DONG_GOI = " + DONG_GOI
                + "; DON_VI_TINH = " + DON_VI_TINH
                + "; DON_GIA = " + DON_GIA
                + "; DON_GIA_TT = " + DON_GIA_TT
                + "; SO_LUONG = " + SO_LUONG
                + "; MA_CSKCB = " + MA_CSKCB
                + "; HANG_SX = " + HANG_SX
                + "; NUOC_SX = " + NUOC_SX
                + "; NHA_THAU = " + NHA_THAU
                + "; QUYET_DINH = " + QUYET_DINH
                + "; CONG_BO = " + CONG_BO
                + "; MA_THUOC_BV = " + MA_THUOC_BV
                + "; LOAI_THUOC = " + LOAI_THUOC
                + "; LOAI_THAU = " + LOAI_THAU
                + "; NHOM_THAU = " + NHOM_THAU
                + "; MANHOM_9324 = " + MANHOM_9324
                + "; HIEULUC = " + HIEULUC
                + "; KETQUA = " + KETQUA
                + "; TYP = " + TYP
                + "; THUOC_RANK = " + THUOC_RANK
    			;
    	return strData;
    }
    
    public void insert() {
		//
    	if( THUOC_ID !=null){
			// Update 
            update();
			return;
		}
        if(DbHelper.checkPhanQuyen(DbHelper.INSERT, "thuoc")==false){
            logger.info("YOU (" + DbHelper.getCurrentSessionUserName() + "), DON'T HAVE INSERT RIGHT for table thuoc");
            return;
        }
		Connection connection = null;

		try {
			connection = DbHelper.getSql2o();
            connection.setRollbackOnException(false);

            logger.info("Insert [thuoc] BEGIN: "+ this.toString());

            String sql = "insert into thuoc (MA_HOAT_CHAT, MA_AX, HOAT_CHAT, HOATCHAT_AX, MA_DUONG_DUNG, MA_DUONGDUNG_AX, DUONG_DUNG, DUONGDUNG_AX, HAM_LUONG, HAMLUONG_AX, TEN_THUOC, TENTHUOC_AX, SO_DANG_KY, SODANGKY_AX, DONG_GOI, DON_VI_TINH, DON_GIA, DON_GIA_TT, SO_LUONG, MA_CSKCB, HANG_SX, NUOC_SX, NHA_THAU, QUYET_DINH, CONG_BO, MA_THUOC_BV, LOAI_THUOC, LOAI_THAU, NHOM_THAU, MANHOM_9324, HIEULUC, KETQUA, TYP, THUOC_RANK STS) values(:MA_HOAT_CHAT, :MA_AX, :HOAT_CHAT, :HOATCHAT_AX, :MA_DUONG_DUNG, :MA_DUONGDUNG_AX, :DUONG_DUNG, :DUONGDUNG_AX, :HAM_LUONG, :HAMLUONG_AX, :TEN_THUOC, :TENTHUOC_AX, :SO_DANG_KY, :SODANGKY_AX, :DONG_GOI, :DON_VI_TINH, :DON_GIA, :DON_GIA_TT, :SO_LUONG, :MA_CSKCB, :HANG_SX, :NUOC_SX, :NHA_THAU, :QUYET_DINH, :CONG_BO, :MA_THUOC_BV, :LOAI_THUOC, :LOAI_THAU, :NHOM_THAU, :MANHOM_9324, :HIEULUC, :KETQUA, :TYP, :THUOC_RANK 0)";
                            			int createdId = connection
                            					.createQuery(
							sql,
							true)
                        .addParameter("MA_HOAT_CHAT", this.MA_HOAT_CHAT)
                            .addParameter("MA_AX", this.MA_AX)
                            .addParameter("HOAT_CHAT", this.HOAT_CHAT)
                            .addParameter("HOATCHAT_AX", this.HOATCHAT_AX)
                            .addParameter("MA_DUONG_DUNG", this.MA_DUONG_DUNG)
                            .addParameter("MA_DUONGDUNG_AX", this.MA_DUONGDUNG_AX)
                            .addParameter("DUONG_DUNG", this.DUONG_DUNG)
                            .addParameter("DUONGDUNG_AX", this.DUONGDUNG_AX)
                            .addParameter("HAM_LUONG", this.HAM_LUONG)
                            .addParameter("HAMLUONG_AX", this.HAMLUONG_AX)
                            .addParameter("TEN_THUOC", this.TEN_THUOC)
                            .addParameter("TENTHUOC_AX", this.TENTHUOC_AX)
                            .addParameter("SO_DANG_KY", this.SO_DANG_KY)
                            .addParameter("SODANGKY_AX", this.SODANGKY_AX)
                            .addParameter("DONG_GOI", this.DONG_GOI)
                            .addParameter("DON_VI_TINH", this.DON_VI_TINH)
                            .addParameter("DON_GIA", this.DON_GIA)
                            .addParameter("DON_GIA_TT", this.DON_GIA_TT)
                            .addParameter("SO_LUONG", this.SO_LUONG)
                            .addParameter("MA_CSKCB", this.MA_CSKCB)
                            .addParameter("HANG_SX", this.HANG_SX)
                            .addParameter("NUOC_SX", this.NUOC_SX)
                            .addParameter("NHA_THAU", this.NHA_THAU)
                            .addParameter("QUYET_DINH", this.QUYET_DINH)
                            .addParameter("CONG_BO", this.CONG_BO)
                            .addParameter("MA_THUOC_BV", this.MA_THUOC_BV)
                            .addParameter("LOAI_THUOC", this.LOAI_THUOC)
                            .addParameter("LOAI_THAU", this.LOAI_THAU)
                            .addParameter("NHOM_THAU", this.NHOM_THAU)
                            .addParameter("MANHOM_9324", this.MANHOM_9324)
                            .addParameter("HIEULUC", this.HIEULUC)
                            .addParameter("KETQUA", this.KETQUA)
                            .addParameter("TYP", this.TYP)
                            .addParameter("THUOC_RANK", this.THUOC_RANK)
    					.executeUpdate()
                                                .getKey(Integer.class);
                            					
            logger.info("Add OK: NewID="+createdId);
            logger.info("Add OK [thuoc] debug: "+toString());
            // Set KEYID THUOC_ID = newID
                            THUOC_ID = createdId;
                            			// Save log
            connection
					.createQuery(
							"insert into action_log(u_id,u_action,dbtable,actionid,fieldid) values(:u_id,:u_action,:dbtable,:actionid,:fieldid)",
							true)
					.addParameter("u_id", DbHelper.getCurrentSessionUserId())
					.addParameter("u_action", "New thuoc. ID="+THUOC_ID)
                    .addParameter("dbtable", "thuoc")
                    .addParameter("fieldid", THUOC_ID)
					.addParameter("actionid", 1)
					.executeUpdate();
            logger.info("Add [thuoc] OK: NewID="+createdId);
            logger.info("Add [thuoc] OK: Data="+this.toString());
		} catch (Exception t) {
            logger.error("Add [thuoc] Error: "+"\nException=\n"+ t);
			throw new RuntimeException("ADD [thuoc]. ERROR: "+t.getMessage(), t);
		}
	}
    
    public void update() {
		//
    	if(THUOC_ID==null){
            insert();
			return;
		}
        if(DbHelper.checkPhanQuyen(DbHelper.UPDATE, "thuoc")==false){
            logger.info("YOU (" + DbHelper.getCurrentSessionUserName() + "), DON'T HAVE UPDATE RIGHT for table thuoc");
            return;
        }
		Connection connection = null;

		try {
			connection = DbHelper.getSql2o();
            connection.setRollbackOnException(false);
            Thuoc temp = Thuoc.load(this.THUOC_ID);
            if(temp!=null){
            	logger.info("Begin Update [thuoc]: "+temp.toString());
            }
            logger.info("Update [thuoc] BEGIN: "+ this.toString());
			//
			String sql = "update thuoc set MA_HOAT_CHAT=:MA_HOAT_CHAT, MA_AX=:MA_AX, HOAT_CHAT=:HOAT_CHAT, HOATCHAT_AX=:HOATCHAT_AX, MA_DUONG_DUNG=:MA_DUONG_DUNG, MA_DUONGDUNG_AX=:MA_DUONGDUNG_AX, DUONG_DUNG=:DUONG_DUNG, DUONGDUNG_AX=:DUONGDUNG_AX, HAM_LUONG=:HAM_LUONG, HAMLUONG_AX=:HAMLUONG_AX, TEN_THUOC=:TEN_THUOC, TENTHUOC_AX=:TENTHUOC_AX, SO_DANG_KY=:SO_DANG_KY, SODANGKY_AX=:SODANGKY_AX, DONG_GOI=:DONG_GOI, DON_VI_TINH=:DON_VI_TINH, DON_GIA=:DON_GIA, DON_GIA_TT=:DON_GIA_TT, SO_LUONG=:SO_LUONG, MA_CSKCB=:MA_CSKCB, HANG_SX=:HANG_SX, NUOC_SX=:NUOC_SX, NHA_THAU=:NHA_THAU, QUYET_DINH=:QUYET_DINH, CONG_BO=:CONG_BO, MA_THUOC_BV=:MA_THUOC_BV, LOAI_THUOC=:LOAI_THUOC, LOAI_THAU=:LOAI_THAU, NHOM_THAU=:NHOM_THAU, MANHOM_9324=:MANHOM_9324, HIEULUC=:HIEULUC, KETQUA=:KETQUA, TYP=:TYP, THUOC_RANK=:THUOC_RANK where THUOC_ID=:THUOC_ID";
			connection
					.createQuery(
							sql,
							true)
                    .addParameter("MA_HOAT_CHAT", this.MA_HOAT_CHAT)
                    .addParameter("MA_AX", this.MA_AX)
                    .addParameter("HOAT_CHAT", this.HOAT_CHAT)
                    .addParameter("HOATCHAT_AX", this.HOATCHAT_AX)
                    .addParameter("MA_DUONG_DUNG", this.MA_DUONG_DUNG)
                    .addParameter("MA_DUONGDUNG_AX", this.MA_DUONGDUNG_AX)
                    .addParameter("DUONG_DUNG", this.DUONG_DUNG)
                    .addParameter("DUONGDUNG_AX", this.DUONGDUNG_AX)
                    .addParameter("HAM_LUONG", this.HAM_LUONG)
                    .addParameter("HAMLUONG_AX", this.HAMLUONG_AX)
                    .addParameter("TEN_THUOC", this.TEN_THUOC)
                    .addParameter("TENTHUOC_AX", this.TENTHUOC_AX)
                    .addParameter("SO_DANG_KY", this.SO_DANG_KY)
                    .addParameter("SODANGKY_AX", this.SODANGKY_AX)
                    .addParameter("DONG_GOI", this.DONG_GOI)
                    .addParameter("DON_VI_TINH", this.DON_VI_TINH)
                    .addParameter("DON_GIA", this.DON_GIA)
                    .addParameter("DON_GIA_TT", this.DON_GIA_TT)
                    .addParameter("SO_LUONG", this.SO_LUONG)
                    .addParameter("MA_CSKCB", this.MA_CSKCB)
                    .addParameter("HANG_SX", this.HANG_SX)
                    .addParameter("NUOC_SX", this.NUOC_SX)
                    .addParameter("NHA_THAU", this.NHA_THAU)
                    .addParameter("QUYET_DINH", this.QUYET_DINH)
                    .addParameter("CONG_BO", this.CONG_BO)
                    .addParameter("MA_THUOC_BV", this.MA_THUOC_BV)
                    .addParameter("LOAI_THUOC", this.LOAI_THUOC)
                    .addParameter("LOAI_THAU", this.LOAI_THAU)
                    .addParameter("NHOM_THAU", this.NHOM_THAU)
                    .addParameter("MANHOM_9324", this.MANHOM_9324)
                    .addParameter("HIEULUC", this.HIEULUC)
                    .addParameter("KETQUA", this.KETQUA)
                    .addParameter("TYP", this.TYP)
                    .addParameter("THUOC_RANK", this.THUOC_RANK)
					.addParameter("THUOC_ID", this.THUOC_ID)
					.executeUpdate();
            logger.info("Update [thuoc] OK: ID="+THUOC_ID);
            logger.info("End   Update [thuoc]: "+toString());
            connection
					.createQuery(
							"insert into action_log(u_id,u_action,dbtable,actionid,fieldid) values(:u_id,:u_action,:dbtable,:actionid,:fieldid)",
							true)
					.addParameter("u_id", DbHelper.getCurrentSessionUserId())
					.addParameter("u_action", "Update thuoc. ID="+THUOC_ID)
                    .addParameter("dbtable", "thuoc")
                    .addParameter("fieldid", THUOC_ID)
					.addParameter("actionid", 2)
					.executeUpdate();
		} catch (Exception t) {
			logger.error("Update [thuoc] Error: ID=["+THUOC_ID +"]."+"\nException=\n"+ t);
			throw new RuntimeException("Update [thuoc]. ERROR: "+t.getMessage(), t);
		}
	}
    
    
    public void delete() {
		//
    	if(THUOC_ID==null){
			return;
		}
        if(DbHelper.checkPhanQuyen(DbHelper.DELETE, "thuoc")==false){
            logger.info("YOU (" + DbHelper.getCurrentSessionUserName() + "), DON'T HAVE DELETE RIGHT for table thuoc");
            return;
        }
		Connection connection = null;

		try {
			connection = DbHelper.getSql2o();
            connection.setRollbackOnException(false);
            logger.error("Update Row [thuoc] BEGIN: ID=["+THUOC_ID +"]. " + this.toString());
			String sql = "update thuoc set STS=:STS where THUOC_ID=:THUOC_ID";
			connection
					.createQuery(
							sql,
							true)
					.addParameter("STS", DbHelper.DELETE_STATUS)
					.addParameter("THUOC_ID", this.THUOC_ID)
					.executeUpdate();
			logger.error("Delete [thuoc] OK: ID=["+THUOC_ID +"].");
            connection
					.createQuery(
							"insert into action_log(u_id,u_action,dbtable,actionid,fieldid) values(:u_id,:u_action,:dbtable,:actionid,:fieldid)",
							true)
					.addParameter("u_id", DbHelper.getCurrentSessionUserId())
					.addParameter("u_action", "Update thuoc. ID="+THUOC_ID)
                    .addParameter("dbtable", "thuoc")
                    .addParameter("fieldid", THUOC_ID)
					.addParameter("actionid", 3)
					.executeUpdate();
		} catch (Exception t) {
			logger.error("Delete [thuoc] Error: ID=["+THUOC_ID +"]."+"\nException=\n"+ t);
			throw new RuntimeException("Delete [thuoc]. ID=["+THUOC_ID + " ERROR: "+t.getMessage(), t);
		}
	}
    
	public void deleteRow() {
		//
    	if(THUOC_ID==null){
			return;
		}
        if(DbHelper.checkPhanQuyen(DbHelper.DELETE, "thuoc")==false){
            logger.info("YOU (" + DbHelper.getCurrentSessionUserName() + "), DON'T HAVE DELETE RIGHT for table thuoc");
            return;
        }
		Connection connection = null;

		try {
			connection = DbHelper.getSql2o();
            connection.setRollbackOnException(false);
            logger.error("Delete Row [thuoc] BEGIN: ID=["+THUOC_ID +"]. " + this.toString());
			String sql = "delete from thuoc where THUOC_ID=:THUOC_ID";
			connection
					.createQuery(
							sql,
							true)
					.addParameter("THUOC_ID", this.THUOC_ID)
					.executeUpdate();
			logger.error("Delete Row [thuoc] OK: ID=["+THUOC_ID +"].");
            connection
					.createQuery(
							"insert into action_log(u_id,u_action,dbtable,actionid,fieldid) values(:u_id,:u_action,:dbtable,:actionid,:fieldid)",
							true)
					.addParameter("u_id", DbHelper.getCurrentSessionUserId())
					.addParameter("u_action", "Update thuoc. ID="+THUOC_ID)
                    .addParameter("dbtable", "thuoc")
                    .addParameter("fieldid", THUOC_ID)
					.addParameter("actionid", 4)
					.executeUpdate();
		} catch (Exception t) {
			logger.error("Delete [thuoc] Error: ID=["+THUOC_ID +"]."+"\nException=\n"+ t);
			throw new RuntimeException("Delete [thuoc]. ID=["+THUOC_ID + " ERROR: "+t.getMessage(), t);
		}
	}
    
    public String getIndex(int idx){
        switch(idx){
            case 0:
                // java.lang.String    
                if(this.MA_HOAT_CHAT!=null)
                    return this.MA_HOAT_CHAT.toString();
                else
                    return "N/A";
            case 1:
                // java.lang.String    
                if(this.MA_AX!=null)
                    return this.MA_AX.toString();
                else
                    return "N/A";
            case 2:
                // java.lang.String    
                if(this.HOAT_CHAT!=null)
                    return this.HOAT_CHAT.toString();
                else
                    return "N/A";
            case 3:
                // java.lang.String    
                if(this.HOATCHAT_AX!=null)
                    return this.HOATCHAT_AX.toString();
                else
                    return "N/A";
            case 4:
                // java.lang.String    
                if(this.MA_DUONG_DUNG!=null)
                    return this.MA_DUONG_DUNG.toString();
                else
                    return "N/A";
            case 5:
                // java.lang.String    
                if(this.MA_DUONGDUNG_AX!=null)
                    return this.MA_DUONGDUNG_AX.toString();
                else
                    return "N/A";
            case 6:
                // java.lang.String    
                if(this.DUONG_DUNG!=null)
                    return this.DUONG_DUNG.toString();
                else
                    return "N/A";
            case 7:
                // java.lang.String    
                if(this.DUONGDUNG_AX!=null)
                    return this.DUONGDUNG_AX.toString();
                else
                    return "N/A";
            case 8:
                // java.lang.String    
                if(this.HAM_LUONG!=null)
                    return this.HAM_LUONG.toString();
                else
                    return "N/A";
            case 9:
                // java.lang.String    
                if(this.HAMLUONG_AX!=null)
                    return this.HAMLUONG_AX.toString();
                else
                    return "N/A";
            case 10:
                // java.lang.String    
                if(this.TEN_THUOC!=null)
                    return this.TEN_THUOC.toString();
                else
                    return "N/A";
            case 11:
                // java.lang.String    
                if(this.TENTHUOC_AX!=null)
                    return this.TENTHUOC_AX.toString();
                else
                    return "N/A";
            case 12:
                // java.lang.String    
                if(this.SO_DANG_KY!=null)
                    return this.SO_DANG_KY.toString();
                else
                    return "N/A";
            case 13:
                // java.lang.String    
                if(this.SODANGKY_AX!=null)
                    return this.SODANGKY_AX.toString();
                else
                    return "N/A";
            case 14:
                // java.lang.String    
                if(this.DONG_GOI!=null)
                    return this.DONG_GOI.toString();
                else
                    return "N/A";
            case 15:
                // java.lang.String    
                if(this.DON_VI_TINH!=null)
                    return this.DON_VI_TINH.toString();
                else
                    return "N/A";
            case 16:
                // java.lang.Integer   
                if(this.DON_GIA!=null)
                    return this.DON_GIA.toString();
                else
                    return "N/A";
            case 17:
                // java.lang.Integer   
                if(this.DON_GIA_TT!=null)
                    return this.DON_GIA_TT.toString();
                else
                    return "N/A";
            case 18:
                // java.lang.Integer   
                if(this.SO_LUONG!=null)
                    return this.SO_LUONG.toString();
                else
                    return "N/A";
            case 19:
                // java.lang.String    
                if(this.MA_CSKCB!=null)
                    return this.MA_CSKCB.toString();
                else
                    return "N/A";
            case 20:
                // java.lang.String    
                if(this.HANG_SX!=null)
                    return this.HANG_SX.toString();
                else
                    return "N/A";
            case 21:
                // java.lang.String    
                if(this.NUOC_SX!=null)
                    return this.NUOC_SX.toString();
                else
                    return "N/A";
            case 22:
                // java.lang.String    
                if(this.NHA_THAU!=null)
                    return this.NHA_THAU.toString();
                else
                    return "N/A";
            case 23:
                // java.lang.String    
                if(this.QUYET_DINH!=null)
                    return this.QUYET_DINH.toString();
                else
                    return "N/A";
            case 24:
                // java.lang.String    
                if(this.CONG_BO!=null)
                    return this.CONG_BO.toString();
                else
                    return "N/A";
            case 25:
                // java.lang.String    
                if(this.MA_THUOC_BV!=null)
                    return this.MA_THUOC_BV.toString();
                else
                    return "N/A";
            case 26:
                // java.lang.Integer   
                if(this.LOAI_THUOC!=null)
                    return this.LOAI_THUOC.toString();
                else
                    return "N/A";
            case 27:
                // java.lang.Integer   
                if(this.LOAI_THAU!=null)
                    return this.LOAI_THAU.toString();
                else
                    return "N/A";
            case 28:
                // java.lang.String    
                if(this.NHOM_THAU!=null)
                    return this.NHOM_THAU.toString();
                else
                    return "N/A";
            case 29:
                // java.lang.Integer   
                if(this.MANHOM_9324!=null)
                    return this.MANHOM_9324.toString();
                else
                    return "N/A";
            case 30:
                // java.lang.Integer   
                if(this.HIEULUC!=null)
                    return this.HIEULUC.toString();
                else
                    return "N/A";
            case 31:
                // java.lang.Integer   
                if(this.KETQUA!=null)
                    return this.KETQUA.toString();
                else
                    return "N/A";
            case 32:
                // java.lang.Integer   
                if(this.TYP!=null)
                    return this.TYP.toString();
                else
                    return "N/A";
            case 33:
                // java.lang.Integer   
                if(this.THUOC_RANK!=null)
                    return this.THUOC_RANK.toString();
                else
                    return "N/A";
            default:
        }
        return "";
    }
}