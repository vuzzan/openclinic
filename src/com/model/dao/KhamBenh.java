/*
 * Java bean class for entity table kham_benh 
 * Created on 18 Oct 2017 ( Date ISO 2017-10-18 - Time 21:21:36 )
 * Generated by Telosys Tools Generator ( version 2.1.1 )
 * template update by NEO
 */

package com.model.dao;

import java.io.Serializable;
import org.apache.logging.log4j.LogManager;
import org.apache.logging.log4j.Logger;
import org.sql2o.Connection;
import com.DbHelper;

import java.util.Date;

/**
 * Entity bean for table "kham_benh"
 * 
 * @author Telosys Tools Generator
 *
 */
public class KhamBenh implements Serializable
{
    static Logger logger = LogManager.getLogger(KhamBenh.class.getName());
    private static final long serialVersionUID = 1L;

    public Integer    MA_LK ; // Primary Key

    public Integer    STT ;
    public Integer    BN_ID ;
    public String     TEN_BENH_NHAN ;
    public String     TEN_BENH ;
    public String     MA_BENH ;
    public String     MA_BENHKHAC ;
    public Integer    MA_LYDO_VVIEN ;
    public String     MA_NOI_CHUYEN ;
    public Integer    MA_TAI_NAN ;
    public String     NGAY_VAO ;
    public String     NGAY_RA ;
    public Integer    SO_NGAY_DTRI ;
    public Integer    KET_QUA_DTRI ;
    public Integer    TINH_TRANG_RV ;
    public String     NGAY_TTOAN ;
    public Integer    MUC_HUONG ;
    public Integer    T_THUOC ;
    public Integer    T_VTYT ;
    public Integer    T_TONGCHI ;
    public Integer    T_BNTT ;
    public Integer    T_BHTT ;
    public Integer    T_NGUONKHAC ;
    public Integer    T_NGOAIDS ;
    public Integer    NAM_QT ;
    public Integer    THANG_QT ;
    public Integer    MA_LOAI_KCB ;
    public String     MA_KHOA ;
    public String     MA_CSKCB ;
    public String     MA_KHUVUC ;
    public String     MA_PTTT_QT ;
    public Float      CAN_NANG ;
    public Date       KB_DATE ;
    public Integer    KIEU_TT ;
    public String     CHANDOAN_BD ;
    public Integer    STS ;

    /**
     * Default constructor
     */
    public KhamBenh()
    {
        super();
        // Set default value 
this.STT = 0;                         // data type = Integer   
this.BN_ID = 0;                         // data type = Integer   
this.TEN_BENH_NHAN = "";//String.format("%255.255s", "TEN_BENH_NHAN").trim(); // data type = String     255
this.TEN_BENH = "";//String.format("%255.255s", "TEN_BENH").trim(); // data type = String     255
this.MA_BENH = "";//String.format("%5.5s", "MA_BENH").trim(); // data type = String     5
this.MA_BENHKHAC = "";//String.format("%255.255s", "MA_BENHKHAC").trim(); // data type = String     255
this.MA_LYDO_VVIEN = 0;                         // data type = Integer   
this.MA_NOI_CHUYEN = "";//String.format("%5.5s", "MA_NOI_CHUYEN").trim(); // data type = String     5
this.MA_TAI_NAN = 0;                         // data type = Integer   
this.NGAY_VAO = "";//String.format("%12.12s", "NGAY_VAO").trim(); // data type = String     12
this.NGAY_RA = "";//String.format("%12.12s", "NGAY_RA").trim(); // data type = String     12
this.SO_NGAY_DTRI = 0;                         // data type = Integer   
this.KET_QUA_DTRI = 0;                         // data type = Integer   
this.TINH_TRANG_RV = 0;                         // data type = Integer   
this.NGAY_TTOAN = "";//String.format("%12.12s", "NGAY_TTOAN").trim(); // data type = String     12
this.MUC_HUONG = 0;                         // data type = Integer   
this.T_THUOC = 0;                         // data type = Integer   
this.T_VTYT = 0;                         // data type = Integer   
this.T_TONGCHI = 0;                         // data type = Integer   
this.T_BNTT = 0;                         // data type = Integer   
this.T_BHTT = 0;                         // data type = Integer   
this.T_NGUONKHAC = 0;                         // data type = Integer   
this.T_NGOAIDS = 0;                         // data type = Integer   
this.NAM_QT = 0;                         // data type = Integer   
this.THANG_QT = 0;                         // data type = Integer   
this.MA_LOAI_KCB = 0;                         // data type = Integer   
this.MA_KHOA = "";//String.format("%3.3s", "MA_KHOA").trim(); // data type = String     3
this.MA_CSKCB = "";//String.format("%5.5s", "MA_CSKCB").trim(); // data type = String     5
this.MA_KHUVUC = "";//String.format("%2.2s", "MA_KHUVUC").trim(); // data type = String     2
this.MA_PTTT_QT = "";//String.format("%255.255s", "MA_PTTT_QT").trim(); // data type = String     255
this.CAN_NANG = (float)0.0;      // data type = Float     
this.KB_DATE = new java.util.Date();      // data type = Date      
this.KIEU_TT = 0;                         // data type = Integer   
this.CHANDOAN_BD = "";//String.format("%256.256s", "CHANDOAN_BD").trim(); // data type = String     256
this.STS = 0;                         // data type = Integer   
        // End Set default value 
    }
    
    //----------------------------------------------------------------------
    // GETTER(S) & SETTER(S) FOR THE PRIMARY KEY 
    //----------------------------------------------------------------------
    /**
     * Set the "maLk" field value
     * This field is mapped on the database column "MA_LK" ( type "INT", NotNull : true ) 
     * @param MA_LK
     */
	public void setMA_LK( Integer MA_LK )
    {
        this.MA_LK = MA_LK ;
    }
    /**
     * Get the "MA_LK" field value
     * This field is mapped on the database column "MA_LK" ( type "INT", NotNull : true ) 
     * @return the field value
     */
	public Integer getMA_LK()
    {
        return this.MA_LK;
    }

    //----------------------------------------------------------------------
    // GETTER(S) & SETTER(S) FOR DATA FIELDS
    //----------------------------------------------------------------------
    //--- DATABASE MAPPING : STT ( INT ) 
    /**
     * Set the "STT" field value
     * This field is mapped on the database column "STT" ( type "INT", NotNull : false ) 
     * @param STT
     */
    public void setSTT( Integer STT )
    {
        this.STT = STT;
    }
    /**
     * Get the "stt" field value
     * This field is mapped on the database column "STT" ( type "INT", NotNull : false ) 
     * @return the field value
     */
    public Integer getSTT()
    {
        return this.STT;
    }

    //--- DATABASE MAPPING : BN_ID ( INT ) 
    /**
     * Set the "BN_ID" field value
     * This field is mapped on the database column "BN_ID" ( type "INT", NotNull : true ) 
     * @param BN_ID
     */
    public void setBN_ID( Integer BN_ID )
    {
        this.BN_ID = BN_ID;
    }
    /**
     * Get the "bnId" field value
     * This field is mapped on the database column "BN_ID" ( type "INT", NotNull : true ) 
     * @return the field value
     */
    public Integer getBN_ID()
    {
        return this.BN_ID;
    }

    //--- DATABASE MAPPING : TEN_BENH_NHAN ( VARCHAR ) 
    /**
     * Set the "TEN_BENH_NHAN" field value
     * This field is mapped on the database column "TEN_BENH_NHAN" ( type "VARCHAR", NotNull : false ) 
     * @param TEN_BENH_NHAN
     */
    public void setTEN_BENH_NHAN( String TEN_BENH_NHAN )
    {
        this.TEN_BENH_NHAN = TEN_BENH_NHAN;
    }
    /**
     * Get the "tenBenhNhan" field value
     * This field is mapped on the database column "TEN_BENH_NHAN" ( type "VARCHAR", NotNull : false ) 
     * @return the field value
     */
    public String getTEN_BENH_NHAN()
    {
        return this.TEN_BENH_NHAN;
    }

    //--- DATABASE MAPPING : TEN_BENH ( VARCHAR ) 
    /**
     * Set the "TEN_BENH" field value
     * This field is mapped on the database column "TEN_BENH" ( type "VARCHAR", NotNull : false ) 
     * @param TEN_BENH
     */
    public void setTEN_BENH( String TEN_BENH )
    {
        this.TEN_BENH = TEN_BENH;
    }
    /**
     * Get the "tenBenh" field value
     * This field is mapped on the database column "TEN_BENH" ( type "VARCHAR", NotNull : false ) 
     * @return the field value
     */
    public String getTEN_BENH()
    {
        return this.TEN_BENH;
    }

    //--- DATABASE MAPPING : MA_BENH ( VARCHAR ) 
    /**
     * Set the "MA_BENH" field value
     * This field is mapped on the database column "MA_BENH" ( type "VARCHAR", NotNull : false ) 
     * @param MA_BENH
     */
    public void setMA_BENH( String MA_BENH )
    {
        this.MA_BENH = MA_BENH;
    }
    /**
     * Get the "maBenh" field value
     * This field is mapped on the database column "MA_BENH" ( type "VARCHAR", NotNull : false ) 
     * @return the field value
     */
    public String getMA_BENH()
    {
        return this.MA_BENH;
    }

    //--- DATABASE MAPPING : MA_BENHKHAC ( VARCHAR ) 
    /**
     * Set the "MA_BENHKHAC" field value
     * This field is mapped on the database column "MA_BENHKHAC" ( type "VARCHAR", NotNull : false ) 
     * @param MA_BENHKHAC
     */
    public void setMA_BENHKHAC( String MA_BENHKHAC )
    {
        this.MA_BENHKHAC = MA_BENHKHAC;
    }
    /**
     * Get the "maBenhkhac" field value
     * This field is mapped on the database column "MA_BENHKHAC" ( type "VARCHAR", NotNull : false ) 
     * @return the field value
     */
    public String getMA_BENHKHAC()
    {
        return this.MA_BENHKHAC;
    }

    //--- DATABASE MAPPING : MA_LYDO_VVIEN ( INT ) 
    /**
     * Set the "MA_LYDO_VVIEN" field value
     * This field is mapped on the database column "MA_LYDO_VVIEN" ( type "INT", NotNull : false ) 
     * @param MA_LYDO_VVIEN
     */
    public void setMA_LYDO_VVIEN( Integer MA_LYDO_VVIEN )
    {
        this.MA_LYDO_VVIEN = MA_LYDO_VVIEN;
    }
    /**
     * Get the "maLydoVvien" field value
     * This field is mapped on the database column "MA_LYDO_VVIEN" ( type "INT", NotNull : false ) 
     * @return the field value
     */
    public Integer getMA_LYDO_VVIEN()
    {
        return this.MA_LYDO_VVIEN;
    }

    //--- DATABASE MAPPING : MA_NOI_CHUYEN ( VARCHAR ) 
    /**
     * Set the "MA_NOI_CHUYEN" field value
     * This field is mapped on the database column "MA_NOI_CHUYEN" ( type "VARCHAR", NotNull : false ) 
     * @param MA_NOI_CHUYEN
     */
    public void setMA_NOI_CHUYEN( String MA_NOI_CHUYEN )
    {
        this.MA_NOI_CHUYEN = MA_NOI_CHUYEN;
    }
    /**
     * Get the "maNoiChuyen" field value
     * This field is mapped on the database column "MA_NOI_CHUYEN" ( type "VARCHAR", NotNull : false ) 
     * @return the field value
     */
    public String getMA_NOI_CHUYEN()
    {
        return this.MA_NOI_CHUYEN;
    }

    //--- DATABASE MAPPING : MA_TAI_NAN ( INT ) 
    /**
     * Set the "MA_TAI_NAN" field value
     * This field is mapped on the database column "MA_TAI_NAN" ( type "INT", NotNull : false ) 
     * @param MA_TAI_NAN
     */
    public void setMA_TAI_NAN( Integer MA_TAI_NAN )
    {
        this.MA_TAI_NAN = MA_TAI_NAN;
    }
    /**
     * Get the "maTaiNan" field value
     * This field is mapped on the database column "MA_TAI_NAN" ( type "INT", NotNull : false ) 
     * @return the field value
     */
    public Integer getMA_TAI_NAN()
    {
        return this.MA_TAI_NAN;
    }

    //--- DATABASE MAPPING : NGAY_VAO ( VARCHAR ) 
    /**
     * Set the "NGAY_VAO" field value
     * This field is mapped on the database column "NGAY_VAO" ( type "VARCHAR", NotNull : true ) 
     * @param NGAY_VAO
     */
    public void setNGAY_VAO( String NGAY_VAO )
    {
        this.NGAY_VAO = NGAY_VAO;
    }
    /**
     * Get the "ngayVao" field value
     * This field is mapped on the database column "NGAY_VAO" ( type "VARCHAR", NotNull : true ) 
     * @return the field value
     */
    public String getNGAY_VAO()
    {
        return this.NGAY_VAO;
    }

    //--- DATABASE MAPPING : NGAY_RA ( VARCHAR ) 
    /**
     * Set the "NGAY_RA" field value
     * This field is mapped on the database column "NGAY_RA" ( type "VARCHAR", NotNull : true ) 
     * @param NGAY_RA
     */
    public void setNGAY_RA( String NGAY_RA )
    {
        this.NGAY_RA = NGAY_RA;
    }
    /**
     * Get the "ngayRa" field value
     * This field is mapped on the database column "NGAY_RA" ( type "VARCHAR", NotNull : true ) 
     * @return the field value
     */
    public String getNGAY_RA()
    {
        return this.NGAY_RA;
    }

    //--- DATABASE MAPPING : SO_NGAY_DTRI ( INT ) 
    /**
     * Set the "SO_NGAY_DTRI" field value
     * This field is mapped on the database column "SO_NGAY_DTRI" ( type "INT", NotNull : true ) 
     * @param SO_NGAY_DTRI
     */
    public void setSO_NGAY_DTRI( Integer SO_NGAY_DTRI )
    {
        this.SO_NGAY_DTRI = SO_NGAY_DTRI;
    }
    /**
     * Get the "soNgayDtri" field value
     * This field is mapped on the database column "SO_NGAY_DTRI" ( type "INT", NotNull : true ) 
     * @return the field value
     */
    public Integer getSO_NGAY_DTRI()
    {
        return this.SO_NGAY_DTRI;
    }

    //--- DATABASE MAPPING : KET_QUA_DTRI ( INT ) 
    /**
     * Set the "KET_QUA_DTRI" field value
     * This field is mapped on the database column "KET_QUA_DTRI" ( type "INT", NotNull : true ) 
     * @param KET_QUA_DTRI
     */
    public void setKET_QUA_DTRI( Integer KET_QUA_DTRI )
    {
        this.KET_QUA_DTRI = KET_QUA_DTRI;
    }
    /**
     * Get the "ketQuaDtri" field value
     * This field is mapped on the database column "KET_QUA_DTRI" ( type "INT", NotNull : true ) 
     * @return the field value
     */
    public Integer getKET_QUA_DTRI()
    {
        return this.KET_QUA_DTRI;
    }

    //--- DATABASE MAPPING : TINH_TRANG_RV ( INT ) 
    /**
     * Set the "TINH_TRANG_RV" field value
     * This field is mapped on the database column "TINH_TRANG_RV" ( type "INT", NotNull : true ) 
     * @param TINH_TRANG_RV
     */
    public void setTINH_TRANG_RV( Integer TINH_TRANG_RV )
    {
        this.TINH_TRANG_RV = TINH_TRANG_RV;
    }
    /**
     * Get the "tinhTrangRv" field value
     * This field is mapped on the database column "TINH_TRANG_RV" ( type "INT", NotNull : true ) 
     * @return the field value
     */
    public Integer getTINH_TRANG_RV()
    {
        return this.TINH_TRANG_RV;
    }

    //--- DATABASE MAPPING : NGAY_TTOAN ( VARCHAR ) 
    /**
     * Set the "NGAY_TTOAN" field value
     * This field is mapped on the database column "NGAY_TTOAN" ( type "VARCHAR", NotNull : true ) 
     * @param NGAY_TTOAN
     */
    public void setNGAY_TTOAN( String NGAY_TTOAN )
    {
        this.NGAY_TTOAN = NGAY_TTOAN;
    }
    /**
     * Get the "ngayTtoan" field value
     * This field is mapped on the database column "NGAY_TTOAN" ( type "VARCHAR", NotNull : true ) 
     * @return the field value
     */
    public String getNGAY_TTOAN()
    {
        return this.NGAY_TTOAN;
    }

    //--- DATABASE MAPPING : MUC_HUONG ( INT ) 
    /**
     * Set the "MUC_HUONG" field value
     * This field is mapped on the database column "MUC_HUONG" ( type "INT", NotNull : true ) 
     * @param MUC_HUONG
     */
    public void setMUC_HUONG( Integer MUC_HUONG )
    {
        this.MUC_HUONG = MUC_HUONG;
    }
    /**
     * Get the "mucHuong" field value
     * This field is mapped on the database column "MUC_HUONG" ( type "INT", NotNull : true ) 
     * @return the field value
     */
    public Integer getMUC_HUONG()
    {
        return this.MUC_HUONG;
    }

    //--- DATABASE MAPPING : T_THUOC ( INT ) 
    /**
     * Set the "T_THUOC" field value
     * This field is mapped on the database column "T_THUOC" ( type "INT", NotNull : true ) 
     * @param T_THUOC
     */
    public void setT_THUOC( Integer T_THUOC )
    {
        this.T_THUOC = T_THUOC;
    }
    /**
     * Get the "tThuoc" field value
     * This field is mapped on the database column "T_THUOC" ( type "INT", NotNull : true ) 
     * @return the field value
     */
    public Integer getT_THUOC()
    {
        return this.T_THUOC;
    }

    //--- DATABASE MAPPING : T_VTYT ( INT ) 
    /**
     * Set the "T_VTYT" field value
     * This field is mapped on the database column "T_VTYT" ( type "INT", NotNull : true ) 
     * @param T_VTYT
     */
    public void setT_VTYT( Integer T_VTYT )
    {
        this.T_VTYT = T_VTYT;
    }
    /**
     * Get the "tVtyt" field value
     * This field is mapped on the database column "T_VTYT" ( type "INT", NotNull : true ) 
     * @return the field value
     */
    public Integer getT_VTYT()
    {
        return this.T_VTYT;
    }

    //--- DATABASE MAPPING : T_TONGCHI ( INT ) 
    /**
     * Set the "T_TONGCHI" field value
     * This field is mapped on the database column "T_TONGCHI" ( type "INT", NotNull : true ) 
     * @param T_TONGCHI
     */
    public void setT_TONGCHI( Integer T_TONGCHI )
    {
        this.T_TONGCHI = T_TONGCHI;
    }
    /**
     * Get the "tTongchi" field value
     * This field is mapped on the database column "T_TONGCHI" ( type "INT", NotNull : true ) 
     * @return the field value
     */
    public Integer getT_TONGCHI()
    {
        return this.T_TONGCHI;
    }

    //--- DATABASE MAPPING : T_BNTT ( INT ) 
    /**
     * Set the "T_BNTT" field value
     * This field is mapped on the database column "T_BNTT" ( type "INT", NotNull : true ) 
     * @param T_BNTT
     */
    public void setT_BNTT( Integer T_BNTT )
    {
        this.T_BNTT = T_BNTT;
    }
    /**
     * Get the "tBntt" field value
     * This field is mapped on the database column "T_BNTT" ( type "INT", NotNull : true ) 
     * @return the field value
     */
    public Integer getT_BNTT()
    {
        return this.T_BNTT;
    }

    //--- DATABASE MAPPING : T_BHTT ( INT ) 
    /**
     * Set the "T_BHTT" field value
     * This field is mapped on the database column "T_BHTT" ( type "INT", NotNull : true ) 
     * @param T_BHTT
     */
    public void setT_BHTT( Integer T_BHTT )
    {
        this.T_BHTT = T_BHTT;
    }
    /**
     * Get the "tBhtt" field value
     * This field is mapped on the database column "T_BHTT" ( type "INT", NotNull : true ) 
     * @return the field value
     */
    public Integer getT_BHTT()
    {
        return this.T_BHTT;
    }

    //--- DATABASE MAPPING : T_NGUONKHAC ( INT ) 
    /**
     * Set the "T_NGUONKHAC" field value
     * This field is mapped on the database column "T_NGUONKHAC" ( type "INT", NotNull : true ) 
     * @param T_NGUONKHAC
     */
    public void setT_NGUONKHAC( Integer T_NGUONKHAC )
    {
        this.T_NGUONKHAC = T_NGUONKHAC;
    }
    /**
     * Get the "tNguonkhac" field value
     * This field is mapped on the database column "T_NGUONKHAC" ( type "INT", NotNull : true ) 
     * @return the field value
     */
    public Integer getT_NGUONKHAC()
    {
        return this.T_NGUONKHAC;
    }

    //--- DATABASE MAPPING : T_NGOAIDS ( INT ) 
    /**
     * Set the "T_NGOAIDS" field value
     * This field is mapped on the database column "T_NGOAIDS" ( type "INT", NotNull : true ) 
     * @param T_NGOAIDS
     */
    public void setT_NGOAIDS( Integer T_NGOAIDS )
    {
        this.T_NGOAIDS = T_NGOAIDS;
    }
    /**
     * Get the "tNgoaids" field value
     * This field is mapped on the database column "T_NGOAIDS" ( type "INT", NotNull : true ) 
     * @return the field value
     */
    public Integer getT_NGOAIDS()
    {
        return this.T_NGOAIDS;
    }

    //--- DATABASE MAPPING : NAM_QT ( INT ) 
    /**
     * Set the "NAM_QT" field value
     * This field is mapped on the database column "NAM_QT" ( type "INT", NotNull : true ) 
     * @param NAM_QT
     */
    public void setNAM_QT( Integer NAM_QT )
    {
        this.NAM_QT = NAM_QT;
    }
    /**
     * Get the "namQt" field value
     * This field is mapped on the database column "NAM_QT" ( type "INT", NotNull : true ) 
     * @return the field value
     */
    public Integer getNAM_QT()
    {
        return this.NAM_QT;
    }

    //--- DATABASE MAPPING : THANG_QT ( INT ) 
    /**
     * Set the "THANG_QT" field value
     * This field is mapped on the database column "THANG_QT" ( type "INT", NotNull : true ) 
     * @param THANG_QT
     */
    public void setTHANG_QT( Integer THANG_QT )
    {
        this.THANG_QT = THANG_QT;
    }
    /**
     * Get the "thangQt" field value
     * This field is mapped on the database column "THANG_QT" ( type "INT", NotNull : true ) 
     * @return the field value
     */
    public Integer getTHANG_QT()
    {
        return this.THANG_QT;
    }

    //--- DATABASE MAPPING : MA_LOAI_KCB ( INT ) 
    /**
     * Set the "MA_LOAI_KCB" field value
     * This field is mapped on the database column "MA_LOAI_KCB" ( type "INT", NotNull : true ) 
     * @param MA_LOAI_KCB
     */
    public void setMA_LOAI_KCB( Integer MA_LOAI_KCB )
    {
        this.MA_LOAI_KCB = MA_LOAI_KCB;
    }
    /**
     * Get the "maLoaiKcb" field value
     * This field is mapped on the database column "MA_LOAI_KCB" ( type "INT", NotNull : true ) 
     * @return the field value
     */
    public Integer getMA_LOAI_KCB()
    {
        return this.MA_LOAI_KCB;
    }

    //--- DATABASE MAPPING : MA_KHOA ( VARCHAR ) 
    /**
     * Set the "MA_KHOA" field value
     * This field is mapped on the database column "MA_KHOA" ( type "VARCHAR", NotNull : true ) 
     * @param MA_KHOA
     */
    public void setMA_KHOA( String MA_KHOA )
    {
        this.MA_KHOA = MA_KHOA;
    }
    /**
     * Get the "maKhoa" field value
     * This field is mapped on the database column "MA_KHOA" ( type "VARCHAR", NotNull : true ) 
     * @return the field value
     */
    public String getMA_KHOA()
    {
        return this.MA_KHOA;
    }

    //--- DATABASE MAPPING : MA_CSKCB ( VARCHAR ) 
    /**
     * Set the "MA_CSKCB" field value
     * This field is mapped on the database column "MA_CSKCB" ( type "VARCHAR", NotNull : true ) 
     * @param MA_CSKCB
     */
    public void setMA_CSKCB( String MA_CSKCB )
    {
        this.MA_CSKCB = MA_CSKCB;
    }
    /**
     * Get the "maCskcb" field value
     * This field is mapped on the database column "MA_CSKCB" ( type "VARCHAR", NotNull : true ) 
     * @return the field value
     */
    public String getMA_CSKCB()
    {
        return this.MA_CSKCB;
    }

    //--- DATABASE MAPPING : MA_KHUVUC ( VARCHAR ) 
    /**
     * Set the "MA_KHUVUC" field value
     * This field is mapped on the database column "MA_KHUVUC" ( type "VARCHAR", NotNull : true ) 
     * @param MA_KHUVUC
     */
    public void setMA_KHUVUC( String MA_KHUVUC )
    {
        this.MA_KHUVUC = MA_KHUVUC;
    }
    /**
     * Get the "maKhuvuc" field value
     * This field is mapped on the database column "MA_KHUVUC" ( type "VARCHAR", NotNull : true ) 
     * @return the field value
     */
    public String getMA_KHUVUC()
    {
        return this.MA_KHUVUC;
    }

    //--- DATABASE MAPPING : MA_PTTT_QT ( VARCHAR ) 
    /**
     * Set the "MA_PTTT_QT" field value
     * This field is mapped on the database column "MA_PTTT_QT" ( type "VARCHAR", NotNull : true ) 
     * @param MA_PTTT_QT
     */
    public void setMA_PTTT_QT( String MA_PTTT_QT )
    {
        this.MA_PTTT_QT = MA_PTTT_QT;
    }
    /**
     * Get the "maPtttQt" field value
     * This field is mapped on the database column "MA_PTTT_QT" ( type "VARCHAR", NotNull : true ) 
     * @return the field value
     */
    public String getMA_PTTT_QT()
    {
        return this.MA_PTTT_QT;
    }

    //--- DATABASE MAPPING : CAN_NANG ( FLOAT ) 
    /**
     * Set the "CAN_NANG" field value
     * This field is mapped on the database column "CAN_NANG" ( type "FLOAT", NotNull : true ) 
     * @param CAN_NANG
     */
    public void setCAN_NANG( Float CAN_NANG )
    {
        this.CAN_NANG = CAN_NANG;
    }
    /**
     * Get the "canNang" field value
     * This field is mapped on the database column "CAN_NANG" ( type "FLOAT", NotNull : true ) 
     * @return the field value
     */
    public Float getCAN_NANG()
    {
        return this.CAN_NANG;
    }

    //--- DATABASE MAPPING : KB_DATE ( TIMESTAMP ) 
    /**
     * Set the "KB_DATE" field value
     * This field is mapped on the database column "KB_DATE" ( type "TIMESTAMP", NotNull : true ) 
     * @param KB_DATE
     */
    public void setKB_DATE( Date KB_DATE )
    {
        this.KB_DATE = KB_DATE;
    }
    /**
     * Get the "kbDate" field value
     * This field is mapped on the database column "KB_DATE" ( type "TIMESTAMP", NotNull : true ) 
     * @return the field value
     */
    public Date getKB_DATE()
    {
        return this.KB_DATE;
    }

    //--- DATABASE MAPPING : KIEU_TT ( INT ) 
    /**
     * Set the "KIEU_TT" field value
     * This field is mapped on the database column "KIEU_TT" ( type "INT", NotNull : true ) 
     * @param KIEU_TT
     */
    public void setKIEU_TT( Integer KIEU_TT )
    {
        this.KIEU_TT = KIEU_TT;
    }
    /**
     * Get the "kieuTt" field value
     * This field is mapped on the database column "KIEU_TT" ( type "INT", NotNull : true ) 
     * @return the field value
     */
    public Integer getKIEU_TT()
    {
        return this.KIEU_TT;
    }

    //--- DATABASE MAPPING : CHANDOAN_BD ( VARCHAR ) 
    /**
     * Set the "CHANDOAN_BD" field value
     * This field is mapped on the database column "CHANDOAN_BD" ( type "VARCHAR", NotNull : false ) 
     * @param CHANDOAN_BD
     */
    public void setCHANDOAN_BD( String CHANDOAN_BD )
    {
        this.CHANDOAN_BD = CHANDOAN_BD;
    }
    /**
     * Get the "chandoanBd" field value
     * This field is mapped on the database column "CHANDOAN_BD" ( type "VARCHAR", NotNull : false ) 
     * @return the field value
     */
    public String getCHANDOAN_BD()
    {
        return this.CHANDOAN_BD;
    }

    //--- DATABASE MAPPING : STS ( INT ) 
    /**
     * Set the "STS" field value
     * This field is mapped on the database column "STS" ( type "INT", NotNull : false ) 
     * @param STS
     */
    public void setSTS( Integer STS )
    {
        this.STS = STS;
    }
    /**
     * Get the "sts" field value
     * This field is mapped on the database column "STS" ( type "INT", NotNull : false ) 
     * @return the field value
     */
    public Integer getSTS()
    {
        return this.STS;
    }



/*
 * CRUD functions
 */
    public static KhamBenh load(String MA_LK) {
    	Connection connection = null;

		try {
			connection = DbHelper.getSql2o();
			String sql = "select * from kham_benh where MA_LK=:MA_LK";
			logger.debug(sql);
			KhamBenh obj = connection
					.createQuery(
							sql,
							true)
					.addParameter("MA_LK", MA_LK)
					.executeAndFetchFirst( KhamBenh.class);
            logger.info(obj);
            logger.debug("Load "+obj);
            return obj;
		} catch (Exception t) {
            logger.error("Load Error: ID="+MA_LK +"\nException=\n"+ t);
			throw new RuntimeException("LOAD [KhamBenh]. ERROR: "+t.getMessage(), t);
		}
    }
    
    public static KhamBenh load(Integer MA_LK) {
    	Connection connection = null;

		try {
			connection = DbHelper.getSql2o();
			String sql = "select * from kham_benh where MA_LK=:MA_LK";
			logger.debug(sql);
			KhamBenh obj = connection
					.createQuery(
							sql,
							true)
					.addParameter("MA_LK", MA_LK)
					.executeAndFetchFirst( KhamBenh.class);
            logger.info(obj);
            logger.debug("Load "+obj);
            return obj;
		} catch (Exception t) {
            logger.error("Load Error: ID="+MA_LK +"\nException=\n"+ t);
			throw new RuntimeException("LOAD [KhamBenh]. ERROR: "+t.getMessage(), t);
		}
    }
    
    public String toString(){
    	String strData = "kham_benh "
    			+" MA_LK = " + MA_LK                + "; STT = " + STT
                + "; BN_ID = " + BN_ID
                + "; TEN_BENH_NHAN = " + TEN_BENH_NHAN
                + "; TEN_BENH = " + TEN_BENH
                + "; MA_BENH = " + MA_BENH
                + "; MA_BENHKHAC = " + MA_BENHKHAC
                + "; MA_LYDO_VVIEN = " + MA_LYDO_VVIEN
                + "; MA_NOI_CHUYEN = " + MA_NOI_CHUYEN
                + "; MA_TAI_NAN = " + MA_TAI_NAN
                + "; NGAY_VAO = " + NGAY_VAO
                + "; NGAY_RA = " + NGAY_RA
                + "; SO_NGAY_DTRI = " + SO_NGAY_DTRI
                + "; KET_QUA_DTRI = " + KET_QUA_DTRI
                + "; TINH_TRANG_RV = " + TINH_TRANG_RV
                + "; NGAY_TTOAN = " + NGAY_TTOAN
                + "; MUC_HUONG = " + MUC_HUONG
                + "; T_THUOC = " + T_THUOC
                + "; T_VTYT = " + T_VTYT
                + "; T_TONGCHI = " + T_TONGCHI
                + "; T_BNTT = " + T_BNTT
                + "; T_BHTT = " + T_BHTT
                + "; T_NGUONKHAC = " + T_NGUONKHAC
                + "; T_NGOAIDS = " + T_NGOAIDS
                + "; NAM_QT = " + NAM_QT
                + "; THANG_QT = " + THANG_QT
                + "; MA_LOAI_KCB = " + MA_LOAI_KCB
                + "; MA_KHOA = " + MA_KHOA
                + "; MA_CSKCB = " + MA_CSKCB
                + "; MA_KHUVUC = " + MA_KHUVUC
                + "; MA_PTTT_QT = " + MA_PTTT_QT
                + "; CAN_NANG = " + CAN_NANG
                + "; KB_DATE = " + KB_DATE
                + "; KIEU_TT = " + KIEU_TT
                + "; CHANDOAN_BD = " + CHANDOAN_BD
                + "; STS = " + STS
    			;
    	return strData;
    }
    
    public void insert() {
		//
    	if( MA_LK !=null){
			// Update 
            update();
			return;
		}
        if(DbHelper.checkPhanQuyen(DbHelper.INSERT, "kham_benh")==false){
            logger.info("YOU (" + DbHelper.getCurrentSessionUserName() + "), DON'T HAVE INSERT RIGHT for table kham_benh");
            return;
        }
		Connection connection = null;

		try {
			connection = DbHelper.getSql2o();
            connection.setRollbackOnException(false);

            String sql = "insert into kham_benh (STT, BN_ID, TEN_BENH_NHAN, TEN_BENH, MA_BENH, MA_BENHKHAC, MA_LYDO_VVIEN, MA_NOI_CHUYEN, MA_TAI_NAN, NGAY_VAO, NGAY_RA, SO_NGAY_DTRI, KET_QUA_DTRI, TINH_TRANG_RV, NGAY_TTOAN, MUC_HUONG, T_THUOC, T_VTYT, T_TONGCHI, T_BNTT, T_BHTT, T_NGUONKHAC, T_NGOAIDS, NAM_QT, THANG_QT, MA_LOAI_KCB, MA_KHOA, MA_CSKCB, MA_KHUVUC, MA_PTTT_QT, CAN_NANG, KB_DATE, KIEU_TT, CHANDOAN_BD,  STS) values(:STT, :BN_ID, :TEN_BENH_NHAN, :TEN_BENH, :MA_BENH, :MA_BENHKHAC, :MA_LYDO_VVIEN, :MA_NOI_CHUYEN, :MA_TAI_NAN, :NGAY_VAO, :NGAY_RA, :SO_NGAY_DTRI, :KET_QUA_DTRI, :TINH_TRANG_RV, :NGAY_TTOAN, :MUC_HUONG, :T_THUOC, :T_VTYT, :T_TONGCHI, :T_BNTT, :T_BHTT, :T_NGUONKHAC, :T_NGOAIDS, :NAM_QT, :THANG_QT, :MA_LOAI_KCB, :MA_KHOA, :MA_CSKCB, :MA_KHUVUC, :MA_PTTT_QT, :CAN_NANG, :KB_DATE, :KIEU_TT, :CHANDOAN_BD,  0)";
                            			int createdId = connection
                            					.createQuery(
							sql,
							true)
                        .addParameter("STT", this.STT)
                            .addParameter("BN_ID", this.BN_ID)
                            .addParameter("TEN_BENH_NHAN", this.TEN_BENH_NHAN)
                            .addParameter("TEN_BENH", this.TEN_BENH)
                            .addParameter("MA_BENH", this.MA_BENH)
                            .addParameter("MA_BENHKHAC", this.MA_BENHKHAC)
                            .addParameter("MA_LYDO_VVIEN", this.MA_LYDO_VVIEN)
                            .addParameter("MA_NOI_CHUYEN", this.MA_NOI_CHUYEN)
                            .addParameter("MA_TAI_NAN", this.MA_TAI_NAN)
                            .addParameter("NGAY_VAO", this.NGAY_VAO)
                            .addParameter("NGAY_RA", this.NGAY_RA)
                            .addParameter("SO_NGAY_DTRI", this.SO_NGAY_DTRI)
                            .addParameter("KET_QUA_DTRI", this.KET_QUA_DTRI)
                            .addParameter("TINH_TRANG_RV", this.TINH_TRANG_RV)
                            .addParameter("NGAY_TTOAN", this.NGAY_TTOAN)
                            .addParameter("MUC_HUONG", this.MUC_HUONG)
                            .addParameter("T_THUOC", this.T_THUOC)
                            .addParameter("T_VTYT", this.T_VTYT)
                            .addParameter("T_TONGCHI", this.T_TONGCHI)
                            .addParameter("T_BNTT", this.T_BNTT)
                            .addParameter("T_BHTT", this.T_BHTT)
                            .addParameter("T_NGUONKHAC", this.T_NGUONKHAC)
                            .addParameter("T_NGOAIDS", this.T_NGOAIDS)
                            .addParameter("NAM_QT", this.NAM_QT)
                            .addParameter("THANG_QT", this.THANG_QT)
                            .addParameter("MA_LOAI_KCB", this.MA_LOAI_KCB)
                            .addParameter("MA_KHOA", this.MA_KHOA)
                            .addParameter("MA_CSKCB", this.MA_CSKCB)
                            .addParameter("MA_KHUVUC", this.MA_KHUVUC)
                            .addParameter("MA_PTTT_QT", this.MA_PTTT_QT)
                            .addParameter("CAN_NANG", this.CAN_NANG)
                            .addParameter("KB_DATE", this.KB_DATE)
                            .addParameter("KIEU_TT", this.KIEU_TT)
                            .addParameter("CHANDOAN_BD", this.CHANDOAN_BD)
        					.executeUpdate()
                                                .getKey(Integer.class);
                            					
            logger.info("Add OK: NewID="+createdId);
            logger.info("Add OK [kham_benh] debug: "+toString());
            // Set KEYID MA_LK = newID
                            MA_LK = createdId;
                            			// Save log
            connection
					.createQuery(
							"insert into action_log(u_id,u_action,dbtable,actionid,fieldid) values(:u_id,:u_action,:dbtable,:actionid,:fieldid)",
							true)
					.addParameter("u_id", DbHelper.getCurrentSessionUserId())
					.addParameter("u_action", "New kham_benh. ID="+MA_LK)
                    .addParameter("dbtable", "kham_benh")
                    .addParameter("fieldid", MA_LK)
					.addParameter("actionid", 1)
					.executeUpdate();
            logger.info("Add [kham_benh] OK: NewID="+createdId);
		} catch (Exception t) {
            logger.error("Add [kham_benh] Error: "+"\nException=\n"+ t);
			throw new RuntimeException("ADD [kham_benh]. ERROR: "+t.getMessage(), t);
		}
	}
    
    public void update() {
		//
    	if(MA_LK==null){
            insert();
			return;
		}
        if(DbHelper.checkPhanQuyen(DbHelper.UPDATE, "kham_benh")==false){
            logger.info("YOU (" + DbHelper.getCurrentSessionUserName() + "), DON'T HAVE UPDATE RIGHT for table kham_benh");
            return;
        }
		Connection connection = null;

		try {
			connection = DbHelper.getSql2o();
            connection.setRollbackOnException(false);
			String sql = "update kham_benh set STT=:STT, BN_ID=:BN_ID, TEN_BENH_NHAN=:TEN_BENH_NHAN, TEN_BENH=:TEN_BENH, MA_BENH=:MA_BENH, MA_BENHKHAC=:MA_BENHKHAC, MA_LYDO_VVIEN=:MA_LYDO_VVIEN, MA_NOI_CHUYEN=:MA_NOI_CHUYEN, MA_TAI_NAN=:MA_TAI_NAN, NGAY_VAO=:NGAY_VAO, NGAY_RA=:NGAY_RA, SO_NGAY_DTRI=:SO_NGAY_DTRI, KET_QUA_DTRI=:KET_QUA_DTRI, TINH_TRANG_RV=:TINH_TRANG_RV, NGAY_TTOAN=:NGAY_TTOAN, MUC_HUONG=:MUC_HUONG, T_THUOC=:T_THUOC, T_VTYT=:T_VTYT, T_TONGCHI=:T_TONGCHI, T_BNTT=:T_BNTT, T_BHTT=:T_BHTT, T_NGUONKHAC=:T_NGUONKHAC, T_NGOAIDS=:T_NGOAIDS, NAM_QT=:NAM_QT, THANG_QT=:THANG_QT, MA_LOAI_KCB=:MA_LOAI_KCB, MA_KHOA=:MA_KHOA, MA_CSKCB=:MA_CSKCB, MA_KHUVUC=:MA_KHUVUC, MA_PTTT_QT=:MA_PTTT_QT, CAN_NANG=:CAN_NANG, KB_DATE=:KB_DATE, KIEU_TT=:KIEU_TT, CHANDOAN_BD=:CHANDOAN_BD, STS=:STS where MA_LK=:MA_LK";
			connection
					.createQuery(
							sql,
							true)
                    .addParameter("STT", this.STT)
                    .addParameter("BN_ID", this.BN_ID)
                    .addParameter("TEN_BENH_NHAN", this.TEN_BENH_NHAN)
                    .addParameter("TEN_BENH", this.TEN_BENH)
                    .addParameter("MA_BENH", this.MA_BENH)
                    .addParameter("MA_BENHKHAC", this.MA_BENHKHAC)
                    .addParameter("MA_LYDO_VVIEN", this.MA_LYDO_VVIEN)
                    .addParameter("MA_NOI_CHUYEN", this.MA_NOI_CHUYEN)
                    .addParameter("MA_TAI_NAN", this.MA_TAI_NAN)
                    .addParameter("NGAY_VAO", this.NGAY_VAO)
                    .addParameter("NGAY_RA", this.NGAY_RA)
                    .addParameter("SO_NGAY_DTRI", this.SO_NGAY_DTRI)
                    .addParameter("KET_QUA_DTRI", this.KET_QUA_DTRI)
                    .addParameter("TINH_TRANG_RV", this.TINH_TRANG_RV)
                    .addParameter("NGAY_TTOAN", this.NGAY_TTOAN)
                    .addParameter("MUC_HUONG", this.MUC_HUONG)
                    .addParameter("T_THUOC", this.T_THUOC)
                    .addParameter("T_VTYT", this.T_VTYT)
                    .addParameter("T_TONGCHI", this.T_TONGCHI)
                    .addParameter("T_BNTT", this.T_BNTT)
                    .addParameter("T_BHTT", this.T_BHTT)
                    .addParameter("T_NGUONKHAC", this.T_NGUONKHAC)
                    .addParameter("T_NGOAIDS", this.T_NGOAIDS)
                    .addParameter("NAM_QT", this.NAM_QT)
                    .addParameter("THANG_QT", this.THANG_QT)
                    .addParameter("MA_LOAI_KCB", this.MA_LOAI_KCB)
                    .addParameter("MA_KHOA", this.MA_KHOA)
                    .addParameter("MA_CSKCB", this.MA_CSKCB)
                    .addParameter("MA_KHUVUC", this.MA_KHUVUC)
                    .addParameter("MA_PTTT_QT", this.MA_PTTT_QT)
                    .addParameter("CAN_NANG", this.CAN_NANG)
                    .addParameter("KB_DATE", this.KB_DATE)
                    .addParameter("KIEU_TT", this.KIEU_TT)
                    .addParameter("CHANDOAN_BD", this.CHANDOAN_BD)
                    .addParameter("STS", this.STS)
					.addParameter("MA_LK", this.MA_LK)
					.executeUpdate();
            logger.info("Update [kham_benh] OK: ID="+MA_LK);
            logger.info("Update [kham_benh] debug: "+toString());
            connection
					.createQuery(
							"insert into action_log(u_id,u_action,dbtable,actionid,fieldid) values(:u_id,:u_action,:dbtable,:actionid,:fieldid)",
							true)
					.addParameter("u_id", DbHelper.getCurrentSessionUserId())
					.addParameter("u_action", "Update kham_benh. ID="+MA_LK)
                    .addParameter("dbtable", "kham_benh")
                    .addParameter("fieldid", MA_LK)
					.addParameter("actionid", 2)
					.executeUpdate();
		} catch (Exception t) {
			logger.error("Update [kham_benh] Error: ID=["+MA_LK +"]."+"\nException=\n"+ t);
			throw new RuntimeException("Update [kham_benh]. ERROR: "+t.getMessage(), t);
		}
	}
    
    
    public void delete() {
		//
    	if(MA_LK==null){
			return;
		}
        if(DbHelper.checkPhanQuyen(DbHelper.DELETE, "kham_benh")==false){
            logger.info("YOU (" + DbHelper.getCurrentSessionUserName() + "), DON'T HAVE DELETE RIGHT for table kham_benh");
            return;
        }
		Connection connection = null;

		try {
			connection = DbHelper.getSql2o();
            connection.setRollbackOnException(false);
			String sql = "update kham_benh set STS=:STS where MA_LK=:MA_LK";
			connection
					.createQuery(
							sql,
							true)
					.addParameter("STS", DbHelper.DELETE_STATUS)
					.addParameter("MA_LK", this.MA_LK)
					.executeUpdate();
			logger.error("Delete [kham_benh] OK: ID=["+MA_LK +"].");
            connection
					.createQuery(
							"insert into action_log(u_id,u_action,dbtable,actionid,fieldid) values(:u_id,:u_action,:dbtable,:actionid,:fieldid)",
							true)
					.addParameter("u_id", DbHelper.getCurrentSessionUserId())
					.addParameter("u_action", "Update kham_benh. ID="+MA_LK)
                    .addParameter("dbtable", "kham_benh")
                    .addParameter("fieldid", MA_LK)
					.addParameter("actionid", 3)
					.executeUpdate();
		} catch (Exception t) {
			logger.error("Delete [kham_benh] Error: ID=["+MA_LK +"]."+"\nException=\n"+ t);
			throw new RuntimeException("Delete [kham_benh]. ID=["+MA_LK + " ERROR: "+t.getMessage(), t);
		}
	}
    
    public String getIndex(int idx){
        switch(idx){
            case 0:
                // java.lang.Integer   
                if(this.STT!=null)
                    return this.STT.toString();
                else
                    return "N/A";
            case 1:
                // java.lang.Integer   
                if(this.BN_ID!=null)
                    return this.BN_ID.toString();
                else
                    return "N/A";
            case 2:
                // java.lang.String    
                if(this.TEN_BENH_NHAN!=null)
                    return this.TEN_BENH_NHAN.toString();
                else
                    return "N/A";
            case 3:
                // java.lang.String    
                if(this.TEN_BENH!=null)
                    return this.TEN_BENH.toString();
                else
                    return "N/A";
            case 4:
                // java.lang.String    
                if(this.MA_BENH!=null)
                    return this.MA_BENH.toString();
                else
                    return "N/A";
            case 5:
                // java.lang.String    
                if(this.MA_BENHKHAC!=null)
                    return this.MA_BENHKHAC.toString();
                else
                    return "N/A";
            case 6:
                // java.lang.Integer   
                if(this.MA_LYDO_VVIEN!=null)
                    return this.MA_LYDO_VVIEN.toString();
                else
                    return "N/A";
            case 7:
                // java.lang.String    
                if(this.MA_NOI_CHUYEN!=null)
                    return this.MA_NOI_CHUYEN.toString();
                else
                    return "N/A";
            case 8:
                // java.lang.Integer   
                if(this.MA_TAI_NAN!=null)
                    return this.MA_TAI_NAN.toString();
                else
                    return "N/A";
            case 9:
                // java.lang.String    
                if(this.NGAY_VAO!=null)
                    return this.NGAY_VAO.toString();
                else
                    return "N/A";
            case 10:
                // java.lang.String    
                if(this.NGAY_RA!=null)
                    return this.NGAY_RA.toString();
                else
                    return "N/A";
            case 11:
                // java.lang.Integer   
                if(this.SO_NGAY_DTRI!=null)
                    return this.SO_NGAY_DTRI.toString();
                else
                    return "N/A";
            case 12:
                // java.lang.Integer   
                if(this.KET_QUA_DTRI!=null)
                    return this.KET_QUA_DTRI.toString();
                else
                    return "N/A";
            case 13:
                // java.lang.Integer   
                if(this.TINH_TRANG_RV!=null)
                    return this.TINH_TRANG_RV.toString();
                else
                    return "N/A";
            case 14:
                // java.lang.String    
                if(this.NGAY_TTOAN!=null)
                    return this.NGAY_TTOAN.toString();
                else
                    return "N/A";
            case 15:
                // java.lang.Integer   
                if(this.MUC_HUONG!=null)
                    return this.MUC_HUONG.toString();
                else
                    return "N/A";
            case 16:
                // java.lang.Integer   
                if(this.T_THUOC!=null)
                    return this.T_THUOC.toString();
                else
                    return "N/A";
            case 17:
                // java.lang.Integer   
                if(this.T_VTYT!=null)
                    return this.T_VTYT.toString();
                else
                    return "N/A";
            case 18:
                // java.lang.Integer   
                if(this.T_TONGCHI!=null)
                    return this.T_TONGCHI.toString();
                else
                    return "N/A";
            case 19:
                // java.lang.Integer   
                if(this.T_BNTT!=null)
                    return this.T_BNTT.toString();
                else
                    return "N/A";
            case 20:
                // java.lang.Integer   
                if(this.T_BHTT!=null)
                    return this.T_BHTT.toString();
                else
                    return "N/A";
            case 21:
                // java.lang.Integer   
                if(this.T_NGUONKHAC!=null)
                    return this.T_NGUONKHAC.toString();
                else
                    return "N/A";
            case 22:
                // java.lang.Integer   
                if(this.T_NGOAIDS!=null)
                    return this.T_NGOAIDS.toString();
                else
                    return "N/A";
            case 23:
                // java.lang.Integer   
                if(this.NAM_QT!=null)
                    return this.NAM_QT.toString();
                else
                    return "N/A";
            case 24:
                // java.lang.Integer   
                if(this.THANG_QT!=null)
                    return this.THANG_QT.toString();
                else
                    return "N/A";
            case 25:
                // java.lang.Integer   
                if(this.MA_LOAI_KCB!=null)
                    return this.MA_LOAI_KCB.toString();
                else
                    return "N/A";
            case 26:
                // java.lang.String    
                if(this.MA_KHOA!=null)
                    return this.MA_KHOA.toString();
                else
                    return "N/A";
            case 27:
                // java.lang.String    
                if(this.MA_CSKCB!=null)
                    return this.MA_CSKCB.toString();
                else
                    return "N/A";
            case 28:
                // java.lang.String    
                if(this.MA_KHUVUC!=null)
                    return this.MA_KHUVUC.toString();
                else
                    return "N/A";
            case 29:
                // java.lang.String    
                if(this.MA_PTTT_QT!=null)
                    return this.MA_PTTT_QT.toString();
                else
                    return "N/A";
            case 30:
                // java.lang.Float     
                if(this.CAN_NANG!=null)
                    return this.CAN_NANG.toString();
                else
                    return "N/A";
            case 31:
                // java.lang.Date      
                if(this.KB_DATE!=null)
                    return this.KB_DATE.toString();
                else
                    return "N/A";
            case 32:
                // java.lang.Integer   
                if(this.KIEU_TT!=null)
                    return this.KIEU_TT.toString();
                else
                    return "N/A";
            case 33:
                // java.lang.String    
                if(this.CHANDOAN_BD!=null)
                    return this.CHANDOAN_BD.toString();
                else
                    return "N/A";
            case 34:
                // java.lang.Integer   
                if(this.STS!=null)
                    return this.STS.toString();
                else
                    return "N/A";
            default:
        }
        return "";
    }
}