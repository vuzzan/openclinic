/*
 * Java bean class for entity table dichvu 
 * Created on 21 Oct 2017 ( Date ISO 2017-10-21 - Time 17:11:21 )
 * Generated by Telosys Tools Generator ( version 2.1.1 )
 * template update by NEO
 */

package com.model.dao;

import java.io.Serializable;
import org.apache.logging.log4j.LogManager;
import org.apache.logging.log4j.Logger;
import org.sql2o.Connection;
import com.DbHelper;


/**
 * Entity bean for table "dichvu"
 * 
 * @author Telosys Tools Generator
 *
 */
public class Dichvu implements Serializable
{
    static Logger logger = LogManager.getLogger(Dichvu.class.getName());
    private static final long serialVersionUID = 1L;

    public Integer    DV_ID ; // Primary Key

    public String     MA_DVKT ;
    public String     TEN_DVKT ;
    public String     MA_GIA ;
    public Integer    DON_GIA ;
    public Integer    DON_GIA2 ;
    public String     QUYET_DINH ;
    public String     CONG_BO ;
    public String     MA_COSOKCB ;
    public String     MANHOM_9324 ;
    public String     HIEULUC ;
    public Integer    KETQUA ;
    public Integer    DV_RANK ;
    public Integer    STS ;

    /**
     * Default constructor
     */
    public Dichvu()
    {
        super();
        // Set default value 
this.MA_DVKT = "";//String.format("%16.16s", "MA_DVKT").trim(); // data type = String     16
this.TEN_DVKT = "";//String.format("%2000.2000s", "TEN_DVKT").trim(); // data type = String     2000
this.MA_GIA = "";//String.format("%16.16s", "MA_GIA").trim(); // data type = String     16
this.DON_GIA = 0;                         // data type = Integer   
this.DON_GIA2 = 0;                         // data type = Integer   
this.QUYET_DINH = "";//String.format("%16.16s", "QUYET_DINH").trim(); // data type = String     16
this.CONG_BO = "";//String.format("%8.8s", "CONG_BO").trim(); // data type = String     8
this.MA_COSOKCB = "";//String.format("%5.5s", "MA_COSOKCB").trim(); // data type = String     5
this.MANHOM_9324 = "";//String.format("%5.5s", "MANHOM_9324").trim(); // data type = String     5
this.HIEULUC = "";//String.format("%5.5s", "HIEULUC").trim(); // data type = String     5
this.KETQUA = 0;                         // data type = Integer   
this.DV_RANK = 0;                         // data type = Integer   
this.STS = 0;                         // data type = Integer   
        // End Set default value 
    }
    
    //----------------------------------------------------------------------
    // GETTER(S) & SETTER(S) FOR THE PRIMARY KEY 
    //----------------------------------------------------------------------
    /**
     * Set the "dvId" field value
     * This field is mapped on the database column "DV_ID" ( type "INT", NotNull : true ) 
     * @param DV_ID
     */
	public void setDV_ID( Integer DV_ID )
    {
        this.DV_ID = DV_ID ;
    }
    /**
     * Get the "DV_ID" field value
     * This field is mapped on the database column "DV_ID" ( type "INT", NotNull : true ) 
     * @return the field value
     */
	public Integer getDV_ID()
    {
        return this.DV_ID;
    }

    //----------------------------------------------------------------------
    // GETTER(S) & SETTER(S) FOR DATA FIELDS
    //----------------------------------------------------------------------
    //--- DATABASE MAPPING : MA_DVKT ( VARCHAR ) 
    /**
     * Set the "MA_DVKT" field value
     * This field is mapped on the database column "MA_DVKT" ( type "VARCHAR", NotNull : true ) 
     * @param MA_DVKT
     */
    public void setMA_DVKT( String MA_DVKT )
    {
        this.MA_DVKT = MA_DVKT;
    }
    /**
     * Get the "maDvkt" field value
     * This field is mapped on the database column "MA_DVKT" ( type "VARCHAR", NotNull : true ) 
     * @return the field value
     */
    public String getMA_DVKT()
    {
        return this.MA_DVKT;
    }

    //--- DATABASE MAPPING : TEN_DVKT ( VARCHAR ) 
    /**
     * Set the "TEN_DVKT" field value
     * This field is mapped on the database column "TEN_DVKT" ( type "VARCHAR", NotNull : true ) 
     * @param TEN_DVKT
     */
    public void setTEN_DVKT( String TEN_DVKT )
    {
        this.TEN_DVKT = TEN_DVKT;
    }
    /**
     * Get the "tenDvkt" field value
     * This field is mapped on the database column "TEN_DVKT" ( type "VARCHAR", NotNull : true ) 
     * @return the field value
     */
    public String getTEN_DVKT()
    {
        return this.TEN_DVKT;
    }

    //--- DATABASE MAPPING : MA_GIA ( VARCHAR ) 
    /**
     * Set the "MA_GIA" field value
     * This field is mapped on the database column "MA_GIA" ( type "VARCHAR", NotNull : true ) 
     * @param MA_GIA
     */
    public void setMA_GIA( String MA_GIA )
    {
        this.MA_GIA = MA_GIA;
    }
    /**
     * Get the "maGia" field value
     * This field is mapped on the database column "MA_GIA" ( type "VARCHAR", NotNull : true ) 
     * @return the field value
     */
    public String getMA_GIA()
    {
        return this.MA_GIA;
    }

    //--- DATABASE MAPPING : DON_GIA ( INT ) 
    /**
     * Set the "DON_GIA" field value
     * This field is mapped on the database column "DON_GIA" ( type "INT", NotNull : true ) 
     * @param DON_GIA
     */
    public void setDON_GIA( Integer DON_GIA )
    {
        this.DON_GIA = DON_GIA;
    }
    /**
     * Get the "donGia" field value
     * This field is mapped on the database column "DON_GIA" ( type "INT", NotNull : true ) 
     * @return the field value
     */
    public Integer getDON_GIA()
    {
        return this.DON_GIA;
    }

    //--- DATABASE MAPPING : DON_GIA2 ( INT ) 
    /**
     * Set the "DON_GIA2" field value
     * This field is mapped on the database column "DON_GIA2" ( type "INT", NotNull : false ) 
     * @param DON_GIA2
     */
    public void setDON_GIA2( Integer DON_GIA2 )
    {
        this.DON_GIA2 = DON_GIA2;
    }
    /**
     * Get the "donGia2" field value
     * This field is mapped on the database column "DON_GIA2" ( type "INT", NotNull : false ) 
     * @return the field value
     */
    public Integer getDON_GIA2()
    {
        return this.DON_GIA2;
    }

    //--- DATABASE MAPPING : QUYET_DINH ( VARCHAR ) 
    /**
     * Set the "QUYET_DINH" field value
     * This field is mapped on the database column "QUYET_DINH" ( type "VARCHAR", NotNull : true ) 
     * @param QUYET_DINH
     */
    public void setQUYET_DINH( String QUYET_DINH )
    {
        this.QUYET_DINH = QUYET_DINH;
    }
    /**
     * Get the "quyetDinh" field value
     * This field is mapped on the database column "QUYET_DINH" ( type "VARCHAR", NotNull : true ) 
     * @return the field value
     */
    public String getQUYET_DINH()
    {
        return this.QUYET_DINH;
    }

    //--- DATABASE MAPPING : CONG_BO ( VARCHAR ) 
    /**
     * Set the "CONG_BO" field value
     * This field is mapped on the database column "CONG_BO" ( type "VARCHAR", NotNull : true ) 
     * @param CONG_BO
     */
    public void setCONG_BO( String CONG_BO )
    {
        this.CONG_BO = CONG_BO;
    }
    /**
     * Get the "congBo" field value
     * This field is mapped on the database column "CONG_BO" ( type "VARCHAR", NotNull : true ) 
     * @return the field value
     */
    public String getCONG_BO()
    {
        return this.CONG_BO;
    }

    //--- DATABASE MAPPING : MA_COSOKCB ( VARCHAR ) 
    /**
     * Set the "MA_COSOKCB" field value
     * This field is mapped on the database column "MA_COSOKCB" ( type "VARCHAR", NotNull : true ) 
     * @param MA_COSOKCB
     */
    public void setMA_COSOKCB( String MA_COSOKCB )
    {
        this.MA_COSOKCB = MA_COSOKCB;
    }
    /**
     * Get the "maCosokcb" field value
     * This field is mapped on the database column "MA_COSOKCB" ( type "VARCHAR", NotNull : true ) 
     * @return the field value
     */
    public String getMA_COSOKCB()
    {
        return this.MA_COSOKCB;
    }

    //--- DATABASE MAPPING : MANHOM_9324 ( VARCHAR ) 
    /**
     * Set the "MANHOM_9324" field value
     * This field is mapped on the database column "MANHOM_9324" ( type "VARCHAR", NotNull : true ) 
     * @param MANHOM_9324
     */
    public void setMANHOM_9324( String MANHOM_9324 )
    {
        this.MANHOM_9324 = MANHOM_9324;
    }
    /**
     * Get the "manhom9324" field value
     * This field is mapped on the database column "MANHOM_9324" ( type "VARCHAR", NotNull : true ) 
     * @return the field value
     */
    public String getMANHOM_9324()
    {
        return this.MANHOM_9324;
    }

    //--- DATABASE MAPPING : HIEULUC ( VARCHAR ) 
    /**
     * Set the "HIEULUC" field value
     * This field is mapped on the database column "HIEULUC" ( type "VARCHAR", NotNull : true ) 
     * @param HIEULUC
     */
    public void setHIEULUC( String HIEULUC )
    {
        this.HIEULUC = HIEULUC;
    }
    /**
     * Get the "hieuluc" field value
     * This field is mapped on the database column "HIEULUC" ( type "VARCHAR", NotNull : true ) 
     * @return the field value
     */
    public String getHIEULUC()
    {
        return this.HIEULUC;
    }

    //--- DATABASE MAPPING : KETQUA ( INT ) 
    /**
     * Set the "KETQUA" field value
     * This field is mapped on the database column "KETQUA" ( type "INT", NotNull : true ) 
     * @param KETQUA
     */
    public void setKETQUA( Integer KETQUA )
    {
        this.KETQUA = KETQUA;
    }
    /**
     * Get the "ketqua" field value
     * This field is mapped on the database column "KETQUA" ( type "INT", NotNull : true ) 
     * @return the field value
     */
    public Integer getKETQUA()
    {
        return this.KETQUA;
    }

    //--- DATABASE MAPPING : DV_RANK ( INT ) 
    /**
     * Set the "DV_RANK" field value
     * This field is mapped on the database column "DV_RANK" ( type "INT", NotNull : true ) 
     * @param DV_RANK
     */
    public void setDV_RANK( Integer DV_RANK )
    {
        this.DV_RANK = DV_RANK;
    }
    /**
     * Get the "dvRank" field value
     * This field is mapped on the database column "DV_RANK" ( type "INT", NotNull : true ) 
     * @return the field value
     */
    public Integer getDV_RANK()
    {
        return this.DV_RANK;
    }

    //--- DATABASE MAPPING : STS ( INT ) 
    /**
     * Set the "STS" field value
     * This field is mapped on the database column "STS" ( type "INT", NotNull : true ) 
     * @param STS
     */
    public void setSTS( Integer STS )
    {
        this.STS = STS;
    }
    /**
     * Get the "sts" field value
     * This field is mapped on the database column "STS" ( type "INT", NotNull : true ) 
     * @return the field value
     */
    public Integer getSTS()
    {
        return this.STS;
    }



/*
 * CRUD functions
 */
    public static Dichvu load(String DV_ID) {
    	Connection connection = null;

		try {
			connection = DbHelper.getSql2o();
			String sql = "select * from dichvu where DV_ID=:DV_ID";
			logger.debug(sql);
			Dichvu obj = connection
					.createQuery(
							sql,
							true)
					.addParameter("DV_ID", DV_ID)
					.executeAndFetchFirst( Dichvu.class);
            logger.info(obj);
            logger.debug("Load "+obj);
            return obj;
		} catch (Exception t) {
            logger.error("Load Error: ID="+DV_ID +"\nException=\n"+ t);
			throw new RuntimeException("LOAD [Dichvu]. ERROR: "+t.getMessage(), t);
		}
    }
    
    public static Dichvu load(Integer DV_ID) {
    	Connection connection = null;

		try {
			connection = DbHelper.getSql2o();
			String sql = "select * from dichvu where DV_ID=:DV_ID";
			logger.debug(sql);
			Dichvu obj = connection
					.createQuery(
							sql,
							true)
					.addParameter("DV_ID", DV_ID)
					.executeAndFetchFirst( Dichvu.class);
            logger.info(obj);
            logger.debug("Load "+obj);
            return obj;
		} catch (Exception t) {
            logger.error("Load Error: ID="+DV_ID +"\nException=\n"+ t);
			throw new RuntimeException("LOAD [Dichvu]. ERROR: "+t.getMessage(), t);
		}
    }
    
    public String toString(){
    	String strData = "dichvu "
    			+" DV_ID = " + DV_ID                + "; MA_DVKT = " + MA_DVKT
                + "; TEN_DVKT = " + TEN_DVKT
                + "; MA_GIA = " + MA_GIA
                + "; DON_GIA = " + DON_GIA
                + "; DON_GIA2 = " + DON_GIA2
                + "; QUYET_DINH = " + QUYET_DINH
                + "; CONG_BO = " + CONG_BO
                + "; MA_COSOKCB = " + MA_COSOKCB
                + "; MANHOM_9324 = " + MANHOM_9324
                + "; HIEULUC = " + HIEULUC
                + "; KETQUA = " + KETQUA
                + "; DV_RANK = " + DV_RANK
                + "; STS = " + STS
    			;
    	return strData;
    }
    
    public void insert() {
		//
    	if( DV_ID !=null){
			// Update 
            update();
			return;
		}
        if(DbHelper.checkPhanQuyen(DbHelper.INSERT, "dichvu")==false){
            logger.info("YOU (" + DbHelper.getCurrentSessionUserName() + "), DON'T HAVE INSERT RIGHT for table dichvu");
            return;
        }
		Connection connection = null;

		try {
			connection = DbHelper.getSql2o();
            connection.setRollbackOnException(false);

            String sql = "insert into dichvu (MA_DVKT, TEN_DVKT, MA_GIA, DON_GIA, DON_GIA2, QUYET_DINH, CONG_BO, MA_COSOKCB, MANHOM_9324, HIEULUC, KETQUA, DV_RANK,  STS) values(:MA_DVKT, :TEN_DVKT, :MA_GIA, :DON_GIA, :DON_GIA2, :QUYET_DINH, :CONG_BO, :MA_COSOKCB, :MANHOM_9324, :HIEULUC, :KETQUA, :DV_RANK,  0)";
                            			int createdId = connection
                            					.createQuery(
							sql,
							true)
                        .addParameter("MA_DVKT", this.MA_DVKT)
                            .addParameter("TEN_DVKT", this.TEN_DVKT)
                            .addParameter("MA_GIA", this.MA_GIA)
                            .addParameter("DON_GIA", this.DON_GIA)
                            .addParameter("DON_GIA2", this.DON_GIA2)
                            .addParameter("QUYET_DINH", this.QUYET_DINH)
                            .addParameter("CONG_BO", this.CONG_BO)
                            .addParameter("MA_COSOKCB", this.MA_COSOKCB)
                            .addParameter("MANHOM_9324", this.MANHOM_9324)
                            .addParameter("HIEULUC", this.HIEULUC)
                            .addParameter("KETQUA", this.KETQUA)
                            .addParameter("DV_RANK", this.DV_RANK)
        					.executeUpdate()
                                                .getKey(Integer.class);
                            					
            logger.info("Add OK: NewID="+createdId);
            logger.info("Add OK [dichvu] debug: "+toString());
            // Set KEYID DV_ID = newID
                            DV_ID = createdId;
                            			// Save log
            connection
					.createQuery(
							"insert into action_log(u_id,u_action,dbtable,actionid,fieldid) values(:u_id,:u_action,:dbtable,:actionid,:fieldid)",
							true)
					.addParameter("u_id", DbHelper.getCurrentSessionUserId())
					.addParameter("u_action", "New dichvu. ID="+DV_ID)
                    .addParameter("dbtable", "dichvu")
                    .addParameter("fieldid", DV_ID)
					.addParameter("actionid", 1)
					.executeUpdate();
            logger.info("Add [dichvu] OK: NewID="+createdId);
		} catch (Exception t) {
            logger.error("Add [dichvu] Error: "+"\nException=\n"+ t);
			throw new RuntimeException("ADD [dichvu]. ERROR: "+t.getMessage(), t);
		}
	}
    
    public void update() {
		//
    	if(DV_ID==null){
            insert();
			return;
		}
        if(DbHelper.checkPhanQuyen(DbHelper.UPDATE, "dichvu")==false){
            logger.info("YOU (" + DbHelper.getCurrentSessionUserName() + "), DON'T HAVE UPDATE RIGHT for table dichvu");
            return;
        }
		Connection connection = null;

		try {
			connection = DbHelper.getSql2o();
            connection.setRollbackOnException(false);
			String sql = "update dichvu set MA_DVKT=:MA_DVKT, TEN_DVKT=:TEN_DVKT, MA_GIA=:MA_GIA, DON_GIA=:DON_GIA, DON_GIA2=:DON_GIA2, QUYET_DINH=:QUYET_DINH, CONG_BO=:CONG_BO, MA_COSOKCB=:MA_COSOKCB, MANHOM_9324=:MANHOM_9324, HIEULUC=:HIEULUC, KETQUA=:KETQUA, DV_RANK=:DV_RANK, STS=:STS where DV_ID=:DV_ID";
			connection
					.createQuery(
							sql,
							true)
                    .addParameter("MA_DVKT", this.MA_DVKT)
                    .addParameter("TEN_DVKT", this.TEN_DVKT)
                    .addParameter("MA_GIA", this.MA_GIA)
                    .addParameter("DON_GIA", this.DON_GIA)
                    .addParameter("DON_GIA2", this.DON_GIA2)
                    .addParameter("QUYET_DINH", this.QUYET_DINH)
                    .addParameter("CONG_BO", this.CONG_BO)
                    .addParameter("MA_COSOKCB", this.MA_COSOKCB)
                    .addParameter("MANHOM_9324", this.MANHOM_9324)
                    .addParameter("HIEULUC", this.HIEULUC)
                    .addParameter("KETQUA", this.KETQUA)
                    .addParameter("DV_RANK", this.DV_RANK)
                    .addParameter("STS", this.STS)
					.addParameter("DV_ID", this.DV_ID)
					.executeUpdate();
            logger.info("Update [dichvu] OK: ID="+DV_ID);
            logger.info("Update [dichvu] debug: "+toString());
            connection
					.createQuery(
							"insert into action_log(u_id,u_action,dbtable,actionid,fieldid) values(:u_id,:u_action,:dbtable,:actionid,:fieldid)",
							true)
					.addParameter("u_id", DbHelper.getCurrentSessionUserId())
					.addParameter("u_action", "Update dichvu. ID="+DV_ID)
                    .addParameter("dbtable", "dichvu")
                    .addParameter("fieldid", DV_ID)
					.addParameter("actionid", 2)
					.executeUpdate();
		} catch (Exception t) {
			logger.error("Update [dichvu] Error: ID=["+DV_ID +"]."+"\nException=\n"+ t);
			throw new RuntimeException("Update [dichvu]. ERROR: "+t.getMessage(), t);
		}
	}
    
    
    public void delete() {
		//
    	if(DV_ID==null){
			return;
		}
        if(DbHelper.checkPhanQuyen(DbHelper.DELETE, "dichvu")==false){
            logger.info("YOU (" + DbHelper.getCurrentSessionUserName() + "), DON'T HAVE DELETE RIGHT for table dichvu");
            return;
        }
		Connection connection = null;

		try {
			connection = DbHelper.getSql2o();
            connection.setRollbackOnException(false);
			String sql = "update dichvu set STS=:STS where DV_ID=:DV_ID";
			connection
					.createQuery(
							sql,
							true)
					.addParameter("STS", DbHelper.DELETE_STATUS)
					.addParameter("DV_ID", this.DV_ID)
					.executeUpdate();
			logger.error("Delete [dichvu] OK: ID=["+DV_ID +"].");
            connection
					.createQuery(
							"insert into action_log(u_id,u_action,dbtable,actionid,fieldid) values(:u_id,:u_action,:dbtable,:actionid,:fieldid)",
							true)
					.addParameter("u_id", DbHelper.getCurrentSessionUserId())
					.addParameter("u_action", "Update dichvu. ID="+DV_ID)
                    .addParameter("dbtable", "dichvu")
                    .addParameter("fieldid", DV_ID)
					.addParameter("actionid", 3)
					.executeUpdate();
		} catch (Exception t) {
			logger.error("Delete [dichvu] Error: ID=["+DV_ID +"]."+"\nException=\n"+ t);
			throw new RuntimeException("Delete [dichvu]. ID=["+DV_ID + " ERROR: "+t.getMessage(), t);
		}
	}
    
	public void deleteRow() {
		//
    	if(DV_ID==null){
			return;
		}
        if(DbHelper.checkPhanQuyen(DbHelper.DELETE, "dichvu")==false){
            logger.info("YOU (" + DbHelper.getCurrentSessionUserName() + "), DON'T HAVE DELETE RIGHT for table dichvu");
            return;
        }
		Connection connection = null;

		try {
			connection = DbHelper.getSql2o();
            connection.setRollbackOnException(false);
			String sql = "delete from dichvu where DV_ID=:DV_ID";
			connection
					.createQuery(
							sql,
							true)
					.addParameter("DV_ID", this.DV_ID)
					.executeUpdate();
			logger.error("Delete Row [dichvu] OK: ID=["+DV_ID +"].");
            connection
					.createQuery(
							"insert into action_log(u_id,u_action,dbtable,actionid,fieldid) values(:u_id,:u_action,:dbtable,:actionid,:fieldid)",
							true)
					.addParameter("u_id", DbHelper.getCurrentSessionUserId())
					.addParameter("u_action", "Update dichvu. ID="+DV_ID)
                    .addParameter("dbtable", "dichvu")
                    .addParameter("fieldid", DV_ID)
					.addParameter("actionid", 4)
					.executeUpdate();
		} catch (Exception t) {
			logger.error("Delete [dichvu] Error: ID=["+DV_ID +"]."+"\nException=\n"+ t);
			throw new RuntimeException("Delete [dichvu]. ID=["+DV_ID + " ERROR: "+t.getMessage(), t);
		}
	}
    
    public String getIndex(int idx){
        switch(idx){
            case 0:
                // java.lang.String    
                if(this.MA_DVKT!=null)
                    return this.MA_DVKT.toString();
                else
                    return "N/A";
            case 1:
                // java.lang.String    
                if(this.TEN_DVKT!=null)
                    return this.TEN_DVKT.toString();
                else
                    return "N/A";
            case 2:
                // java.lang.String    
                if(this.MA_GIA!=null)
                    return this.MA_GIA.toString();
                else
                    return "N/A";
            case 3:
                // java.lang.Integer   
                if(this.DON_GIA!=null)
                    return this.DON_GIA.toString();
                else
                    return "N/A";
            case 4:
                // java.lang.Integer   
                if(this.DON_GIA2!=null)
                    return this.DON_GIA2.toString();
                else
                    return "N/A";
            case 5:
                // java.lang.String    
                if(this.QUYET_DINH!=null)
                    return this.QUYET_DINH.toString();
                else
                    return "N/A";
            case 6:
                // java.lang.String    
                if(this.CONG_BO!=null)
                    return this.CONG_BO.toString();
                else
                    return "N/A";
            case 7:
                // java.lang.String    
                if(this.MA_COSOKCB!=null)
                    return this.MA_COSOKCB.toString();
                else
                    return "N/A";
            case 8:
                // java.lang.String    
                if(this.MANHOM_9324!=null)
                    return this.MANHOM_9324.toString();
                else
                    return "N/A";
            case 9:
                // java.lang.String    
                if(this.HIEULUC!=null)
                    return this.HIEULUC.toString();
                else
                    return "N/A";
            case 10:
                // java.lang.Integer   
                if(this.KETQUA!=null)
                    return this.KETQUA.toString();
                else
                    return "N/A";
            case 11:
                // java.lang.Integer   
                if(this.DV_RANK!=null)
                    return this.DV_RANK.toString();
                else
                    return "N/A";
            case 12:
                // java.lang.Integer   
                if(this.STS!=null)
                    return this.STS.toString();
                else
                    return "N/A";
            default:
        }
        return "";
    }
}